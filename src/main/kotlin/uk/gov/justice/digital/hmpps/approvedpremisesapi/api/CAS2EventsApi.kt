/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package uk.gov.justice.digital.hmpps.approvedpremisesapi.api

import uk.gov.justice.digital.hmpps.approvedpremisesapi.api.events.cas2.model.Cas2ApplicationStatusUpdatedEvent
import uk.gov.justice.digital.hmpps.approvedpremisesapi.api.events.cas2.model.Cas2ApplicationSubmittedEvent
import uk.gov.justice.digital.hmpps.approvedpremisesapi.api.events.cas2.model.Problem
import io.swagger.v3.oas.annotations.*
import io.swagger.v3.oas.annotations.media.*
import io.swagger.v3.oas.annotations.responses.*
import java.util.UUID
import org.springframework.http.ResponseEntity

import org.springframework.web.bind.annotation.*

@RestController
interface CAS2EventsApi {

    fun getDelegate(): CAS2EventsApiDelegate = object: CAS2EventsApiDelegate {}

    @Operation(
        tags = ["CAS2 events",],
        summary = "An 'application-status-updated' event",
        operationId = "eventsCas2ApplicationStatusUpdatedEventIdGet",
        description = """""",
        responses = [
            ApiResponse(responseCode = "200", description = "The application-status-updated corresponding to the provided `eventId`", content = [Content(schema = Schema(implementation = Cas2ApplicationStatusUpdatedEvent::class))]),
            ApiResponse(responseCode = "404", description = "No application-status-updated event found for the provided `eventId`", content = [Content(schema = Schema(implementation = Problem::class))]),
            ApiResponse(responseCode = "500", description = "unexpected error", content = [Content(schema = Schema(implementation = Problem::class))])
        ]
    )
    @RequestMapping(
            method = [RequestMethod.GET],
            value = ["/events/cas2/application-status-updated/{eventId}"],
            produces = ["application/json"]
    )
    fun eventsCas2ApplicationStatusUpdatedEventIdGet(@Parameter(description = "UUID of the event", required = true) @PathVariable("eventId") eventId: UUID): ResponseEntity<Cas2ApplicationStatusUpdatedEvent> {
        return getDelegate().eventsCas2ApplicationStatusUpdatedEventIdGet(eventId)
    }

    @Operation(
        tags = ["CAS2 events",],
        summary = "An 'application-submitted' event",
        operationId = "eventsCas2ApplicationSubmittedEventIdGet",
        description = """""",
        responses = [
            ApiResponse(responseCode = "200", description = "The application-submitted corresponding to the provided `eventId`", content = [Content(schema = Schema(implementation = Cas2ApplicationSubmittedEvent::class))]),
            ApiResponse(responseCode = "404", description = "No application-submitted event found for the provided `eventId`", content = [Content(schema = Schema(implementation = Problem::class))]),
            ApiResponse(responseCode = "500", description = "unexpected error", content = [Content(schema = Schema(implementation = Problem::class))])
        ]
    )
    @RequestMapping(
            method = [RequestMethod.GET],
            value = ["/events/cas2/application-submitted/{eventId}"],
            produces = ["application/json"]
    )
    fun eventsCas2ApplicationSubmittedEventIdGet(@Parameter(description = "UUID of the event", required = true) @PathVariable("eventId") eventId: UUID): ResponseEntity<Cas2ApplicationSubmittedEvent> {
        return getDelegate().eventsCas2ApplicationSubmittedEventIdGet(eventId)
    }
}
