/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package uk.gov.justice.digital.hmpps.approvedpremisesapi.api.cas2v2

import uk.gov.justice.digital.hmpps.approvedpremisesapi.api.model.Cas2v2ReportName
import io.swagger.v3.oas.annotations.*
import io.swagger.v3.oas.annotations.enums.*
import io.swagger.v3.oas.annotations.media.*
import io.swagger.v3.oas.annotations.responses.*
import io.swagger.v3.oas.annotations.security.*
import org.springframework.http.HttpStatus
import org.springframework.http.MediaType
import org.springframework.http.ResponseEntity

import org.springframework.web.bind.annotation.*
import org.springframework.web.context.request.NativeWebRequest
import org.springframework.beans.factory.annotation.Autowired


import kotlin.collections.List
import kotlin.collections.Map

@RestController
interface ReportsCas2v2 {

    fun getDelegate(): ReportsCas2v2Delegate = object: ReportsCas2v2Delegate {}

    @Operation(
        tags = ["Reports",],
        summary = "Returns a 'report' spreadsheet of metrics",
        operationId = "reportsReportNameGet",
        description = """""",
        responses = [
            ApiResponse(responseCode = "200", description = "successful operation", content = [Content(schema = Schema(implementation = org.springframework.core.io.Resource::class))])
        ]
    )
    @RequestMapping(
            method = [RequestMethod.GET],
            value = ["/reports/{reportName}"],
            produces = ["application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"]
    )
    fun reportsReportNameGet(@Parameter(description = "name of the report to download", required = true, schema = Schema(allowableValues = ["submitted-applications", "application-status-updates", "unsubmitted-applications"])) @PathVariable("reportName") reportName: Cas2v2ReportName): ResponseEntity<org.springframework.web.servlet.mvc.method.annotation.StreamingResponseBody> {
        return getDelegate().reportsReportNameGet(reportName)
    }
}
