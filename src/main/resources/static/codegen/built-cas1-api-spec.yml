# DO NOT EDIT.
# This is a build artefact for use in code generation.
openapi: 3.0.1
info:
  title: 'Community Accommodation Services: Approved Premises (CAS1)'
  version: 1.0.0
servers:
  - url: /cas1
paths:
  /change-requests:
    get:
      tags:
        - change requests
      operationId: find
      parameters:
        - name: status
          in: query
          description: filter by status of a change request
          schema:
            $ref: '#/components/schemas/Cas1ChangeRequestStatus'
        - name: page
          in: query
          description: Page number of results to return. If blank, returns all results
          schema:
            type: integer
        - name: sortBy
          in: query
          description: Which field to sort the results by. If blank, will sort by createdAt
          schema:
            $ref: '#/components/schemas/Cas1ChangeRequestSortField'
        - name: sortDirection
          in: query
          description: The direction to sort the results by. If blank, will sort in descending order
          schema:
            $ref: '#/components/schemas/SortDirection'
      responses:
        200:
          description: successfully retrieved change requests
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cas1ChangeRequestSummary'
          headers:
            X-Pagination-CurrentPage:
              $ref: '#/components/headers/X-Pagination-CurrentPage'
            X-Pagination-TotalPages:
              $ref: '#/components/headers/X-Pagination-TotalPages'
            X-Pagination-TotalResults:
              $ref: '#/components/headers/X-Pagination-TotalResults'
            X-Pagination-PageSize:
              $ref: '#/components/headers/X-Pagination-TotalResults'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
    post:
      tags:
        - change requests
      operationId: create
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Cas1NewChangeRequest'
        required: true
      responses:
        200:
          description: successful operation
        400:
          description: invalid params
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
  /spaces/search:
    post:
      tags:
        - space searches
      summary: Search for accommodation "spaces" which are available and match the given requirements
      operationId: spaceSearch
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Cas1SpaceSearchParameters'
        required: true
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Cas1SpaceSearchResults'
        400:
          description: invalid params
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
  /placement-requests/{placementRequestId}/space-bookings:
    post:
      tags:
        - space bookings
      summary: Create a booking for a space in premises, associated with a given placement request
      operationId: createSpaceBooking
      parameters:
        - name: placementRequestId
          in: path
          description: ID of the placement request from which the matching requirements originate
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: details of the space booking to be created
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Cas1NewSpaceBooking'
        required: true
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Cas1SpaceBooking'
        400:
          description: invalid params
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        404:
          description: invalid premises ID or booking ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
      x-codegen-request-body-name: body
  /placement-applications:
    post:
      deprecated: true
      tags:
        - Placement applications
      summary: Creates an application for a placement
      operationId: placement_applicationsPost
      requestBody:
        description: Details about the application
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/NewPlacementApplication'
        required: true
      responses:
        200:
          description: successfully recorded that a placement application has been made
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PlacementApplication'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
  /placement-applications/{id}:
    get:
      deprecated: true
      tags:
        - Placement applications
      summary: Retrieves an application for a placement request
      operationId: placement_applicationsIdGet
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the application
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successfully retrieved placement request application
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PlacementApplication'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
    put:
      tags:
        - Placement applications
      summary: Updates an application for a placement request
      operationId: placement_applicationsIdPut
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the application
          schema:
            type: string
            format: uuid
      requestBody:
        description: Details about the application
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UpdatePlacementApplication'
        required: true
      responses:
        200:
          description: successfully retrieved placement request application
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PlacementApplication'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
  /placement-applications/{id}/submission:
    post:
      deprecated: true
      tags:
        - Placement applications
      summary: Submits an application for a placement request
      operationId: placement_applicationsIdSubmissionPost
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the application
          schema:
            type: string
            format: uuid
      requestBody:
        description: Information needed to submit a placement application
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/SubmitPlacementApplication'
        required: true
      responses:
        200:
          description: successfully submitted the placement application
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlacementApplication'
        400:
          description: placement application has already been submitted
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
  /placement-applications/{id}/decision:
    post:
      deprecated: true
      tags:
        - Placement applications
      summary: Submits a decision for a placement application
      operationId: placement_applicationsIdDecisionPost
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the application
          schema:
            type: string
            format: uuid
      requestBody:
        description: Information needed to submit a placement application
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PlacementApplicationDecisionEnvelope'
        required: true
      responses:
        200:
          description: successfully made a decision on the placement application
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PlacementApplication'
        400:
          description: placement application already has a decision made
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
  /placement-applications/{id}/withdraw:
    post:
      deprecated: true
      tags:
        - Placement applications
      summary: Withdraw a placement application
      operationId: placement_applicationsIdWithdrawPost
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the placement application to withdraw
          schema:
            type: string
            format: uuid
      requestBody:
        description: Withdrawal details
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/WithdrawPlacementApplication'
      responses:
        200:
          description: Placement application withdrawn
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PlacementApplication'
        400:
          description: placement application already has a decision made
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
  /placement-requests:
    get:
      tags:
        - Placement requests
      summary: Gets all placement requests
      operationId: search
      parameters:
        - name: status
          in: query
          description: filter by status of an application
          schema:
            $ref: '#/components/schemas/PlacementRequestStatus'
        - name: crnOrName
          in: query
          description: search by CRN or name
          schema:
            type: string
        - name: tier
          in: query
          description: filter by tier of Offender at time Application was created
          schema:
            $ref: '#/components/schemas/RiskTierLevel'
        - name: arrivalDateStart
          in: query
          description: filter by minimum expected arrival date
          schema:
            type: string
            format: date
        - name: arrivalDateEnd
          in: query
          description: filter by maximum expected arrival date
          schema:
            type: string
            format: date
        - name: requestType
          in: query
          description: filter by request type
          schema:
            $ref: '#/components/schemas/PlacementRequestRequestType'
        - name: cruManagementAreaId
          in: query
          required: false
          description: filter by CRU management area ID
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: Page number of results to return. If blank, returns all results
          schema:
            type: integer
        - name: sortBy
          in: query
          description: Which field to sort the results by. If blank, will sort by createdAt
          schema:
            $ref: '#/components/schemas/PlacementRequestSortField'
        - name: sortDirection
          in: query
          description: The direction to sort the results by. If blank, will sort in descending order
          schema:
            $ref: '#/components/schemas/SortDirection'
      responses:
        200:
          description: successfully retrieved placement requests
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cas1PlacementRequestSummary'
          headers:
            X-Pagination-CurrentPage:
              $ref: '#/components/headers/X-Pagination-CurrentPage'
            X-Pagination-TotalPages:
              $ref: '#/components/headers/X-Pagination-TotalPages'
            X-Pagination-TotalResults:
              $ref: '#/components/headers/X-Pagination-TotalResults'
            X-Pagination-PageSize:
              $ref: '#/components/headers/X-Pagination-TotalResults'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
  /premises/summary:
    get:
      description: Provide a summary of all premises, with optional filtering
      tags:
        - premises
      operationId: "getPremisesSummaries"
      parameters:
        - name: gender
          in: query
          required: false
          description: If specified, only return premises for the corresponding gender
          schema:
            $ref: '#/components/schemas/Cas1ApprovedPremisesGender'
        - name: apAreaId
          in: query
          description: ID of the AP area to filter by
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cas1PremisesBasicSummary'
        400:
          description: invalid params
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'

  /premises/{premisesId}/out-of-service-beds:
    post:
      tags:
        - out-of-service beds
      summary: Posts an out-of-service bed to a specified approved premises
      operationId: createOutOfServiceBed
      parameters:
        - name: premisesId
          in: path
          description: ID of the premises the out-of-service bed is related to
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: details of the out-of-service bed
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Cas1NewOutOfServiceBed'
        required: true
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Cas1OutOfServiceBed'
        400:
          description: invalid params
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        404:
          description: invalid premises ID or booking ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
      x-codegen-request-body-name: body
    get:
      tags:
        - out-of-service beds
      summary: Lists all Out-Of-Service Beds entries for the Premises
      operationId: getOutOfServiceBedsForPremises
      parameters:
        - name: premisesId
          in: path
          description: ID of the premises to show out-of-service beds for
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cas1OutOfServiceBed'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
  /premises/{premisesId}/out-of-service-beds/{outOfServiceBedId}:
    get:
      tags:
        - out-of-service beds
      summary: Returns a specific out-of-service bed for a premises
      operationId: getOutOfServiceBed
      parameters:
        - name: premisesId
          in: path
          description: ID of the premises the out-of-service bed is related to
          required: true
          schema:
            type: string
            format: uuid
        - name: outOfServiceBedId
          in: path
          description: ID of the out-of-service bed
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Cas1OutOfServiceBed'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        404:
          description: invalid premises or out-of-service bed ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
    put:
      tags:
        - out-of-service beds
      summary: Updates an out-of-service bed for a premises
      operationId: updateOutOfServiceBed
      parameters:
        - name: premisesId
          in: path
          description: ID of the premises the out-of-service bed is related to
          required: true
          schema:
            type: string
            format: uuid
        - name: outOfServiceBedId
          in: path
          description: ID of the out-of-service bed
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: details of the out-of-service bed
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UpdateCas1OutOfServiceBed'
        required: true
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Cas1OutOfServiceBed'
        400:
          description: invalid params
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        404:
          description: invalid premises ID or booking ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
      x-codegen-request-body-name: body
  /premises/{premisesId}/out-of-service-beds/{outOfServiceBedId}/cancellations:
    post:
      tags:
        - out-of-service beds
      summary: Posts a cancellation to a specified out-of-service bed
      operationId: cancelOutOfServiceBed
      parameters:
        - name: premisesId
          in: path
          description: ID of the premises the cancellation is related to
          required: true
          schema:
            type: string
            format: uuid
        - name: outOfServiceBedId
          in: path
          description: ID of the out-of-service bed
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: details of the cancellation
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Cas1NewOutOfServiceBedCancellation'
        required: true
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Cas1OutOfServiceBedCancellation'
        400:
          description: invalid params
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        404:
          description: invalid premises ID or out-of-service bed ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
      x-codegen-request-body-name: body

  /premises/{premisesId}:
    get:
      tags:
        - premises
      operationId: "getPremisesById"
      summary: Returns premises information
      parameters:
        - name: premisesId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Cas1Premises'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        404:
          description: invalid premises ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /premises/{premisesId}/beds:
    get:
      tags:
        - premises
      summary: Lists all beds for the given premises
      operationId: getBeds
      parameters:
        - name: premisesId
          in: path
          description: ID of the premises to list the beds for
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cas1PremisesBedSummary'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
  /premises/{premisesId}/capacity:
    get:
      tags:
        - premises
      operationId: "getCapacity"
      summary: Provides capacity information for a given date range
      parameters:
        - name: premisesId
          in: path
          description: ID of the premises
          required: true
          schema:
            type: string
            format: uuid
        - name: startDate
          in: query
          description: Start date, inclusive
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: End date, inclusive
          required: true
          schema:
            type: string
            format: date
        - name: excludeSpaceBookingId
          in: query
          description: ID of a booking to exclude from capacity calculations
          required: false
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Cas1PremiseCapacity'
        400:
          description: invalid params
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        404:
          description: invalid premises ID or booking ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
      x-codegen-request-body-name: body

  /premises/{premisesId}/space-bookings:
    get:
      tags:
        - space bookings
      summary: Lists space bookings for the premises, given optional filtering criteria
      operationId: getSpaceBookings
      parameters:
        - name: premisesId
          in: path
          description: ID of the premises to show space bookings for
          required: true
          schema:
            type: string
            format: uuid
        - name: residency
          in: query
          required: false
          description: Residency status to filter results on. 'Current' means marked as arrived and not departed. 'Upcoming' means not marked as arrived.
          schema:
            $ref: '#/components/schemas/Cas1SpaceBookingResidency'
        - name: crnOrName
          in: query
          required: false
          description: Partial search on CRN or Name
          schema:
            type: string
        - name: keyWorkerStaffCode
          in: query
          required: false
          description: Staff Code of the key worker to show bookings for
          schema:
            type: string
        - name: sortDirection
          in: query
          required: false
          description: The direction to sort the results by. If not defined, will sort in descending order
          schema:
            $ref: '#/components/schemas/SortDirection'
        - name: sortBy
          in: query
          required: false
          description: The field to sort the results by. If not defined, will sort on person name
          schema:
            $ref: '#/components/schemas/Cas1SpaceBookingSummarySortField'
        - name: page
          in: query
          required: false
          description: Page number of results to return. If not provided results will not be paged
          schema:
            type: integer
        - name: perPage
          in: query
          description: Number of items to return per page (defaults to 20)
          schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cas1SpaceBookingSummary'
          headers:
            X-Pagination-CurrentPage:
              $ref: '#/components/headers/X-Pagination-CurrentPage'
            X-Pagination-TotalPages:
              $ref: '#/components/headers/X-Pagination-TotalPages'
            X-Pagination-TotalResults:
              $ref: '#/components/headers/X-Pagination-TotalResults'
            X-Pagination-PageSize:
              $ref: '#/components/headers/X-Pagination-PageSize'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'

  /premises/{premisesId}/space-bookings/{bookingId}:
    get:
      tags:
        - space bookings
      operationId: "getSpaceBookingByPremiseAndId"
      summary: Returns space booking information for a given id
      parameters:
        - name: premisesId
          in: path
          description: ID of the corresponding premises
          required: true
          schema:
            type: string
            format: uuid
        - name: bookingId
          in: path
          description: ID of the space booking
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Cas1SpaceBooking'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
    patch:
      tags:
        - space bookings
      operationId: "updateSpaceBooking"
      parameters:
        - name: premisesId
          in: path
          description: ID of the corresponding premises
          required: true
          schema:
            type: string
            format: uuid
        - name: bookingId
          in: path
          description: ID of the space booking
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Cas1UpdateSpaceBooking'
        required: true
      responses:
        200:
          description: successful operation
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'

  /premises/{premisesId}/space-bookings/{bookingId}/timeline:
    get:
      tags:
        - space bookings
      operationId: "getSpaceBookingTimeline"
      summary: Returns timeline of a specific space booking with a given ID
      parameters:
        - name: premisesId
          in: path
          description: ID of the corresponding premises
          required: true
          schema:
            type: string
            format: uuid
        - name: bookingId
          in: path
          description: ID of the space booking
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cas1TimelineEvent'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'

  /premises/{premisesId}/space-bookings/{bookingId}/arrival:
    post:
      tags:
      - space bookings
      summary: Posts an arrival to a specified space booking
      operationId: recordArrival
      parameters:
        - name: premisesId
          in: path
          description: ID of the corresponding premises
          required: true
          schema:
            type: string
            format: uuid
        - name: bookingId
          in: path
          description: ID of the space booking
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Cas1NewArrival'
        required: true
      responses:
        200:
          description: successful operation
        400:
          description: invalid params
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        404:
          description: invalid premises ID or booking ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'


  /premises/{premisesId}/space-bookings/{bookingId}/keyworker:
    post:
      tags:
        - space bookings
      summary: Assign a keyworker to the space booking
      operationId: assignKeyworker
      parameters:
        - name: premisesId
          in: path
          description: ID of the corresponding premises
          required: true
          schema:
            type: string
            format: uuid
        - name: bookingId
          in: path
          description: ID of the space booking
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Cas1AssignKeyWorker'
        required: true
      responses:
        200:
          description: successful operation
        400:
          description: invalid key worker staff code
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        404:
          description: invalid premises ID or booking ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'

  /premises/{premisesId}/space-bookings/{bookingId}/departure:
    post:
      tags:
        - space bookings
      summary: Posts a departure to a specified space booking
      operationId: recordDeparture
      parameters:
        - name: premisesId
          in: path
          description: ID of the corresponding premises
          required: true
          schema:
            type: string
            format: uuid
        - name: bookingId
          in: path
          description: ID of the space booking
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Cas1NewDeparture'
        required: true
      responses:
        200:
          description: successful operation
        400:
          description: invalid params
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        404:
          description: invalid premises ID or booking ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'

  /premises/{premisesId}/space-bookings/{bookingId}/cancellations:
    post:
      tags:
        - space bookings
      summary: Cancels a space booking
      operationId: "cancelSpaceBooking"
      parameters:
        - name: premisesId
          in: path
          description: ID of the premises the space booking is related to
          required: true
          schema:
            type: string
            format: uuid
        - name: bookingId
          in: path
          description: space booking id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: details of the cancellation
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Cas1NewSpaceBookingCancellation'
        required: true
      responses:
        200:
          description: successful operation
        400:
          description: invalid params
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        404:
          description: invalid premises ID or booking ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
      x-codegen-request-body-name: body


  /premises/{premisesId}/space-bookings/{bookingId}/non-arrival:
    post:
      tags:
        - space bookings
      summary: Posts a non arrival to a specified space booking
      operationId: recordNonArrival
      parameters:
        - name: premisesId
          in: path
          description: ID of the corresponding premises
          required: true
          schema:
            type: string
            format: uuid
        - name: bookingId
          in: path
          description: ID of the space booking
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Cas1NonArrival'
        required: true
      responses:
        200:
          description: successful operation
        400:
          description: invalid params
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        404:
          description: invalid premises ID or booking ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'

  /premises/{premisesId}/day-summary/{date}:
    get:
      tags:
        - premises
      summary: Provides a summary of capacity, space bookings and out of service beds for a premise on a given day
      operationId: getDaySummary
      parameters:
        - name: premisesId
          in: path
          description: ID of the premises
          required: true
          schema:
            type: string
            format: uuid
        - name: date
          in: path
          description: date the summary is required for
          required: true
          schema:
            type: string
            format: date
        - name: bookingsCriteriaFilter
          in: query
          required: false
          description: If provided, will only show bookings with matching criteria
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Cas1SpaceBookingCharacteristic'
        - name: bookingsSortDirection
          in: query
          required: false
          description: The direction to sort the bookings by. If not defined, will sort in descending order
          schema:
            $ref: '#/components/schemas/SortDirection'
        - name: bookingsSortBy
          in: query
          required: false
          description: The field to sort the booking by. If not defined, will sort on person name
          schema:
            $ref: '#/components/schemas/Cas1SpaceBookingDaySummarySortField'
        - name: excludeSpaceBookingId
          in: query
          description: ID of a booking to exclude from capacity calculations and the list of space bookings
          required: false
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Cas1PremisesDaySummary'
          headers:
            X-Pagination-CurrentPage:
              $ref: '#/components/headers/X-Pagination-CurrentPage'
            X-Pagination-TotalPages:
              $ref: '#/components/headers/X-Pagination-TotalPages'
            X-Pagination-TotalResults:
              $ref: '#/components/headers/X-Pagination-TotalResults'
            X-Pagination-PageSize:
              $ref: '#/components/headers/X-Pagination-PageSize'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
  /reference-data/move-on-categories:
    get:
      tags:
        - Reference Data
      operationId: getMoveOnCategories
      summary: Lists all active move-on categories
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MoveOnCategory'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
  /reference-data/non-arrival-reasons:
    get:
      tags:
        - Reference Data
      operationId: getNonArrivalReasons
      summary: Lists all active non-arrivals reasons
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NonArrivalReason'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'

  /reference-data/out-of-service-bed-reasons:
    get:
      tags:
        - Reference Data
      operationId: getOutOfServiceBedReasons
      summary: Lists all reasons for beds going out of service
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cas1OutOfServiceBedReason'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'

  /reference-data/cru-management-areas:
    get:
      tags:
        - Reference Data
      operationId: getCruManagementAreas
      summary: Lists all CRU Management Areas
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cas1CruManagementArea'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'

  /reference-data/departure-reasons:
    get:
      tags:
        - Reference Data
      operationId: getDepartureReasons
      summary: Lists all active departure reasons
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartureReason'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'

  /reports/{reportName}:
    get:
      tags:
        - Reports
      summary: Returns a spreadsheet of all data metrics for the 'reportName'.
      operationId: reportsReportNameGet
      parameters:
        - name: X-Service-Name
          in: header
          required: true
          description: Validates user for this service has access to the report
          schema:
            $ref: '#/components/schemas/ServiceName'
        - name: reportName
          in: path
          description: Name of the report to download
          required: true
          schema:
            $ref: '#/components/schemas/Cas1ReportName'
        - name: year
          in: query
          required: true
          description: The report content will reflect that specified by the given year.
          schema:
            type: integer
        - name: month
          in: query
          required: true
          description: The report content will reflect that specified by the given month.
          schema:
            type: integer
      responses:
        200:
          description: Successfully retrieved the report
          content:
            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':
              schema:
                type: string
                format: binary


  /space-bookings/{bookingId}:
    get:
      tags:
        - space bookings
      operationId: "getSpaceBookingById"
      summary: Returns space booking information for a given id
      parameters:
        - name: bookingId
          in: path
          description: ID of the space booking
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Cas1SpaceBooking'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'

  /out-of-service-beds:
    get:
      tags:
        - out-of-service beds
      summary: Lists all Out-Of-Service Beds entries
      operationId: getOutOfServiceBeds
      parameters:
        - name: temporality
          in: query
          description: If provided, restrict the results to only those with the given temporality/ies.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Temporality'
        - name: premisesId
          in: query
          description: If provided, restrict the results to only those in the premises with the given ID.
          schema:
            type: string
            format: uuid
        - name: apAreaId
          in: query
          description: If provided, restrict the results to only those within the AP area with the given ID.
          schema:
            type: string
            format: uuid
        - name: sortDirection
          in: query
          description: The direction to sort the results by. If blank, will sort in descending order
          schema:
            $ref: '#/components/schemas/SortDirection'
        - name: sortBy
          in: query
          description: The field to sort the results by.
          schema:
            $ref: '#/components/schemas/Cas1OutOfServiceBedSortField'
        - name: page
          in: query
          required: false
          description: Page number of results to return. If not provided results will not be paged
          schema:
            type: integer
        - name: perPage
          in: query
          description: Number of items to return per page (defaults to 10)
          schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cas1OutOfServiceBed'
          headers:
            X-Pagination-CurrentPage:
              $ref: '#/components/headers/X-Pagination-CurrentPage'
            X-Pagination-TotalPages:
              $ref: '#/components/headers/X-Pagination-TotalPages'
            X-Pagination-TotalResults:
              $ref: '#/components/headers/X-Pagination-TotalResults'
            X-Pagination-PageSize:
              $ref: '#/components/headers/X-Pagination-PageSize'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
  /users/{id}:
    get:
      summary: Get information about a specific user
      operationId: getUser
      tags:
        - users
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the user
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successfully retrieved information on user
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ApprovedPremisesUser'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
    put:
      summary: Update a user
      operationId: updateUser
      tags:
        - users
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the user
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Cas1UpdateUser'
        required: true
      responses:
        200:
          description: Successfully added information about user roles and qualifications
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
    delete:
      summary: Deletes the user
      operationId: deleteUser
      tags:
        - users
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
        400:
          description: invalid params
          content:
            'application/problem+json':
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        500:
          $ref: '#/components/responses/500Response'
  /applications/{applicationId}/timeline:
    get:
      tags:
        - Applications
      summary: Returns domain event summary
      operationId: getApplicationTimeLine
      parameters:
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cas1TimelineEvent'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        404:
          description: invalid CRN
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /people/{crn}/timeline:
    get:
      tags:
        - People
      summary: Returns a timeline of all applications for a Person.
      operationId: getPeopleApplicationsTimeline
      parameters:
        - name: crn
          in: path
          description: CRN of the Person to fetch the timeline for
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Cas1PersonalTimeline'
        401:
          $ref: '#/components/responses/401Response'
        403:
          $ref: '#/components/responses/403Response'
        404:
          description: invalid CRN
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'


components:
  responses:
    401Response:
      description: not authenticated
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Problem'
    403Response:
      description: unauthorised
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Problem'
    500Response:
      description: unexpected error
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Problem'
  headers:
    X-Pagination-CurrentPage:
      schema:
        type: integer
      description: The current page number
    X-Pagination-TotalPages:
      schema:
        type: integer
      description: The total number of pages
    X-Pagination-TotalResults:
      schema:
        type: integer
      description: The total number of results
    X-Pagination-PageSize:
      schema:
        type: integer
      description: The size of each page
  schemas:
    Premises:
      type: object
      properties:
        service:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Hope House
        addressLine1:
          type: string
          example: one something street
        addressLine2:
          type: string
          example: Blackmore End
        town:
          type: string
          example: Braintree
        postcode:
          type: string
          example: LS1 3AD
        bedCount:
          type: integer
          example: 22
        availableBedsForToday:
          type: integer
          example: 20
        notes:
          type: string
          example: some notes about this property
        probationRegion:
          $ref: '#/components/schemas/ProbationRegion'
        apArea:
          $ref: '#/components/schemas/ApArea'
        localAuthorityArea:
          $ref: '#/components/schemas/LocalAuthorityArea'
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        status:
          $ref: '#/components/schemas/PropertyStatus'
      discriminator:
        propertyName: service
        mapping:
          CAS1: '#/components/schemas/ApprovedPremises'
          CAS3: '#/components/schemas/TemporaryAccommodationPremises'
      required:
        - service
        - id
        - name
        - addressLine1
        - postcode
        - bedCount
        - availableBedsForToday
        - probationRegion
        - apArea
        - status
    PremisesSummary:
      type: object
      properties:
        service:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Hope House
        addressLine1:
          type: string
          example: one something street
        addressLine2:
          type: string
          example: Blackmore End
        postcode:
          type: string
          example: LS1 3AD
        bedCount:
          type: integer
          example: 22
        status:
          $ref: '#/components/schemas/PropertyStatus'
      discriminator:
        propertyName: service
        mapping:
          CAS1: '#/components/schemas/ApprovedPremisesSummary'
          CAS3: '#/components/schemas/TemporaryAccommodationPremisesSummary'
      required:
        - service
        - id
        - name
        - addressLine1
        - postcode
        - bedCount
        - status
    ApprovedPremises:
      allOf:
        - $ref: '#/components/schemas/Premises'
        - type: object
          properties:
            apCode:
              type: string
              example: NEHOPE1
      required:
        - apCode
        - localAuthorityArea
    TemporaryAccommodationPremises:
      allOf:
        - $ref: '#/components/schemas/Premises'
        - type: object
          properties:
            pdu:
              type: string
            probationDeliveryUnit:
              $ref: '#/components/schemas/ProbationDeliveryUnit'
            turnaroundWorkingDayCount:
              type: integer
              example: 2
      required:
        - pdu
    ApprovedPremisesSummary:
      allOf:
        - $ref: '#/components/schemas/PremisesSummary'
        - type: object
          properties:
            apCode:
              type: string
              example: NEHOPE1
            probationRegion:
              type: string
            apArea:
              type: string
      required:
        - apCode
        - probationRegion
        - apArea
    TemporaryAccommodationPremisesSummary:
      allOf:
        - $ref: '#/components/schemas/PremisesSummary'
        - type: object
          properties:
            pdu:
              type: string
            localAuthorityAreaName:
              type: string
      required:
        - pdu
    NewPremises:
      type: object
      properties:
        name:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        town:
          type: string
        postcode:
          type: string
        notes:
          type: string
          example: some notes about this property
        localAuthorityAreaId:
          type: string
          format: uuid
        probationRegionId:
          type: string
          format: uuid
        characteristicIds:
          type: array
          items:
            type: string
            format: uuid
        status:
          $ref: '#/components/schemas/PropertyStatus'
        pdu:
          type: string
        probationDeliveryUnitId:
          type: string
          format: uuid
        turnaroundWorkingDayCount:
          type: integer
      required:
        - name
        - addressLine1
        - postcode
        - probationRegionId
        - characteristicIds
        - status
    TaskWrapper:
      type: object
      properties:
        task:
          $ref: '#/components/schemas/Task'
        users:
          type: array
          description: Users to whom this task can be allocated
          items:
            $ref: '#/components/schemas/UserWithWorkload'
      required:
        - task
        - users
    Task:
      type: object
      properties:
        taskType:
          $ref: '#/components/schemas/TaskType'
        id:
          type: string
          format: uuid
          example: 6abb5fa3-e93f-4445-887b-30d081688f44
        applicationId:
          type: string
          format: uuid
          example: 6abb5fa3-e93f-4445-887b-30d081688f44
        personSummary:
          $ref: '#/components/schemas/PersonSummary'
        personName:
          type: string
          deprecated: true
          description: Superseded by personSummary which provides 'name' as well as 'personType' and 'crn'.
        crn:
          type: string
        dueDate:
          type: string
          format: date
          deprecated: true
          description: The Due date of the task - this is deprecated in favour of the `dueAt` field
        dueAt:
          type: string
          format: date-time
        allocatedToStaffMember:
          $ref: '#/components/schemas/ApprovedPremisesUser'
        status:
          $ref: '#/components/schemas/TaskStatus'
        apArea:
          $ref: '#/components/schemas/ApArea'
        probationDeliveryUnit:
          $ref: '#/components/schemas/ProbationDeliveryUnit'
        outcomeRecordedAt:
          type: string
          format: date-time
      discriminator:
        propertyName: taskType
        mapping:
          Assessment: '#/components/schemas/AssessmentTask'
          PlacementApplication: '#/components/schemas/PlacementApplicationTask'
      required:
        - id
        - taskType
        - applicationId
        - personName
        - personSummary
        - dueDate
        - status
        - crn
        - dueAt
    TaskStatus:
      type: string
      enum:
        - not_started
        - in_progress
        - complete
        - info_requested
    TaskSortField:
      type: string
      enum:
        - createdAt
        - dueAt
        - person
        - allocatedTo
        - completedAt
        - taskType
        - decision
    AssessmentTask:
      allOf:
        - $ref: '#/components/schemas/Task'
        - type: object
          properties:
            createdFromAppeal:
              type: boolean
            outcome:
              $ref: '#/components/schemas/AssessmentDecision'
          required:
            - createdFromAppeal
    PlacementApplicationTask:
      allOf:
        - $ref: '#/components/schemas/Task'
        - type: object
          properties:
            tier:
              $ref: '#/components/schemas/RiskTierEnvelope'
            releaseType:
              $ref: '#/components/schemas/ReleaseTypeOption'
            placementType:
              $ref: '#/components/schemas/PlacementType'
            placementDates:
              type: array
              items:
                $ref: '#/components/schemas/PlacementDates'
            outcome:
              $ref: '#/components/schemas/PlacementApplicationDecision'
          required:
            - id
            - tier
            - releaseType
            - placementType
    TaskType:
      type: string
      enum:
        - Assessment
        - PlacementApplication
    LocalAuthorityArea:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 6abb5fa3-e93f-4445-887b-30d081688f44
        identifier:
          type: string
          example: LEEDS
        name:
          type: string
          example: Leeds City Council
      required:
        - id
        - identifier
        - name
    ApArea:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: cd1c2d43-0b0b-4438-b0e3-d4424e61fb6a
        identifier:
          type: string
          example: LON
        name:
          type: string
          example: Yorkshire & The Humber
      required:
        - id
        - identifier
        - name
    Cas1CruManagementArea:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    ProbationRegion:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
        name:
          type: string
          example: NPS North East Central Referrals
      required:
        - id
        - name
    Characteristic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
        name:
          type: string
          example: Is this premises catered (rather than self-catered)?
        propertyName:
          type: string
          example: isCatered
        serviceScope:
          type: string
          enum:
            - approved-premises
            - temporary-accommodation
            - "*"
        modelScope:
          type: string
          enum:
            - premises
            - room
            - "*"
      required:
        - id
        - name
        - serviceScope
        - modelScope
    BookingBody:
      type: object
      properties:
        id:
          type: string
          format: uuid
        person:
          $ref: '#/components/schemas/Person'
        arrivalDate:
          type: string
          format: date
        originalArrivalDate:
          type: string
          format: date
        departureDate:
          type: string
          format: date
        originalDepartureDate:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
        keyWorker:
          deprecated: true
          description: KeyWorker is a legacy field only used by CAS1. It is not longer being captured or populated
          allOf:
            - $ref: '#/components/schemas/StaffMember'
        serviceName:
          $ref: '#/components/schemas/ServiceName'
        bed:
          $ref: '#/components/schemas/Bed'
      required:
        - id
        - person
        - arrivalDate
        - originalArrivalDate
        - departureDate
        - originalDepartureDate
        - createdAt
        - serviceName
    NewBooking:
      type: object
      properties:
        crn:
          type: string
          example: A123456
        arrivalDate:
          type: string
          format: date
          example: 2022-07-28
        departureDate:
          type: string
          format: date
          example: 2022-09-30
        bedId:
          type: string
          format: uuid
        serviceName:
          $ref: '#/components/schemas/ServiceName'
        enableTurnarounds:
          type: boolean
        assessmentId:
          type: string
          format: uuid
        eventNumber:
          type: string
      required:
        - crn
        - arrivalDate
        - departureDate
        - serviceName
    NewPlacementRequestBooking:
      type: object
      properties:
        arrivalDate:
          type: string
          format: date
          example: 2022-07-28
        departureDate:
          type: string
          format: date
          example: 2022-09-30
        bedId:
          type: string
          format: uuid
        premisesId:
          type: string
          format: uuid
      required:
        - arrivalDate
        - departureDate
    WithdrawPlacementRequest:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/WithdrawPlacementRequestReason'
      required:
        - reason
    WithdrawPlacementRequestReason:
      type: string
      enum:
        - DuplicatePlacementRequest
        - AlternativeProvisionIdentified
        - ChangeInCircumstances
        - ChangeInReleaseDecision
        - NoCapacityDueToLostBed
        - NoCapacityDueToPlacementPrioritisation
        - NoCapacity
        - ErrorInPlacementRequest
        - WithdrawnByPP
        - RelatedApplicationWithdrawn
        - RelatedPlacementRequestWithdrawn
        - RelatedPlacementApplicationWithdrawn
    PlacementApplicationType:
      type: string
      description: |
        'Initial' means that the request for placement was created for the arrival date included on the original application. 
        'Additional' means the request for placement was created after the application had been assessed as suitable.
        A given application should only have, at most, one request for placement of type 'Initial'.
      enum:
        - Initial
        - Additional
    Booking:
      allOf:
        - $ref: '#/components/schemas/BookingBody'
        - type: object
          properties:
            status:
              $ref: '#/components/schemas/BookingStatus'
            extensions:
              type: array
              items:
                $ref: '#/components/schemas/Extension'
            arrival:
              nullable: true
              allOf:
                - $ref: '#/components/schemas/Arrival'
            departure:
              description: The latest version of the departure, if it exists
              nullable: true
              allOf:
                - $ref: '#/components/schemas/Departure'
            departures:
              description: The full history of the departure
              type: array
              items:
                $ref: '#/components/schemas/Departure'
            nonArrival:
              nullable: true
              allOf:
                - $ref: '#/components/schemas/Nonarrival'
            cancellation:
              description: The latest version of the cancellation, if it exists
              nullable: true
              allOf:
                - $ref: '#/components/schemas/Cancellation'
            cancellations:
              description: The full history of the cancellation
              type: array
              items:
                $ref: '#/components/schemas/Cancellation'
            confirmation:
              nullable: true
              allOf:
                - $ref: '#/components/schemas/Confirmation'
            turnaround:
              description: The latest version of the turnaround, if it exists
              nullable: true
              allOf:
                - $ref: '#/components/schemas/Turnaround'
            turnarounds:
              description: The full history of turnarounds
              type: array
              items:
                $ref: '#/components/schemas/Turnaround'
            turnaroundStartDate:
              type: string
              format: date
            effectiveEndDate:
              type: string
              format: date
            applicationId:
              type: string
              format: uuid
            assessmentId:
              type: string
              format: uuid
            premises:
              $ref: '#/components/schemas/BookingPremisesSummary'
          required:
            - status
            - extensions
            - departures
            - cancellations
            - premises
    BookingPremisesSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    ExtendedPremisesSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        apCode:
          type: string
        postcode:
          type: string
        bedCount:
          type: integer
        availableBedsForToday:
          type: integer
        bookings:
          type: array
          items:
            $ref: '#/components/schemas/PremisesBooking'
        dateCapacities:
          type: array
          items:
            $ref: '#/components/schemas/DateCapacity'
    PremisesBooking:
      type: object
      properties:
        id:
          type: string
          format: uuid
        arrivalDate:
          type: string
          format: date
        departureDate:
          type: string
          format: date
        person:
          $ref: '#/components/schemas/Person'
        bed:
          $ref: '#/components/schemas/Bed'
        status:
          $ref: '#/components/schemas/BookingStatus'
    PlacementRequestBookingSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        premisesId:
          type: string
          format: uuid
        premisesName:
          type: string
        arrivalDate:
          type: string
          format: date
        departureDate:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - space
            - legacy
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/Cas1SpaceCharacteristic'
      required:
        - id
        - premisesId
        - premisesName
        - arrivalDate
        - departureDate
        - createdAt
        - type
    Person:
      type: object
      properties:
        crn:
          type: string
        type:
          $ref: '#/components/schemas/PersonType'
      discriminator:
        propertyName: type
        mapping:
          FullPerson: '#/components/schemas/FullPerson'
          RestrictedPerson: '#/components/schemas/RestrictedPerson'
          UnknownPerson: '#/components/schemas/UnknownPerson'
      required:
        - crn
        - type
    UnknownPerson:
      allOf:
        - $ref: '#/components/schemas/Person'
    RestrictedPerson:
      allOf:
        - $ref: '#/components/schemas/Person'
    FullPerson:
      allOf:
        - $ref: '#/components/schemas/Person'
        - type: object
          properties:
            name:
              type: string
            dateOfBirth:
              type: string
              format: date
            nomsNumber:
              type: string
            pncNumber:
              type: string
            ethnicity:
              type: string
            nationality:
              type: string
            religionOrBelief:
              type: string
            sex:
              type: string
            genderIdentity:
              type: string
            status:
              $ref: '#/components/schemas/PersonStatus'
            prisonName:
              type: string
            isRestricted:
              type: boolean
          required:
            - name
            - dateOfBirth
            - sex
            - status
    PersonSummary:
      type: object
      properties:
        crn:
          type: string
        personType:
          $ref: '#/components/schemas/PersonSummaryDiscriminator'
      discriminator:
        propertyName: personType
        mapping:
          FullPersonSummary: '#/components/schemas/FullPersonSummary'
          RestrictedPersonSummary: '#/components/schemas/RestrictedPersonSummary'
          UnknownPersonSummary: '#/components/schemas/UnknownPersonSummary'
      required:
        - crn
        - type
        - personType
    PersonStatus:
      type: string
      enum:
        - InCustody
        - InCommunity
        - Unknown
    NewArrival:
      type: object
      properties:
        type:
          type: string
        expectedDepartureDate:
          type: string
          format: date
        notes:
          type: string
        keyWorkerStaffCode:
          type: string
      required:
        - type
        - expectedDepartureDate
      discriminator:
        propertyName: type
        mapping:
          CAS2: '#/components/schemas/NewCas2Arrival'
          CAS3: '#/components/schemas/NewCas3Arrival'
    NewCas2Arrival:
      allOf:
        - $ref: '#/components/schemas/NewArrival'
        - type: object
          properties:
            arrivalDate:
              type: string
              format: date
          required:
            - arrivalDate
    NewCas3Arrival:
      allOf:
        - $ref: '#/components/schemas/NewArrival'
        - type: object
          properties:
            arrivalDate:
              type: string
              format: date
          required:
            - arrivalDate
    Arrival:
      type: object
      properties:
        expectedDepartureDate:
          type: string
          format: date
        arrivalDate:
          type: string
          format: date
        arrivalTime:
          type: string
          format: time
        notes:
          type: string
        keyWorkerStaffCode:
          type: string
        bookingId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - type
        - bookingId
        - expectedDepartureDate
        - createdAt
        - arrivalDate
        - arrivalTime
    Nonarrival:
      type: object
      properties:
        id:
          type: string
          format: uuid
        bookingId:
          type: string
          format: uuid
        date:
          type: string
          format: date
        reason:
          $ref: '#/components/schemas/NonArrivalReason'
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - bookingId
        - date
        - reason
        - createdAt
    NewCancellation:
      type: object
      properties:
        date:
          type: string
          format: date
        reason:
          type: string
          format: uuid
        notes:
          type: string
        otherReason:
          type: string
      required:
        - bookingId
        - date
        - reason
    NewWithdrawal:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/WithdrawalReason'
        otherReason:
          type: string
      required:
        - reason
    Cancellation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        bookingId:
          type: string
          format: uuid
        date:
          type: string
          format: date
        reason:
          $ref: '#/components/schemas/CancellationReason'
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
        premisesName:
          type: string
        otherReason:
          type: string
      required:
        - bookingId
        - date
        - reason
        - createdAt
        - premisesName
    Extension:
      type: object
      properties:
        id:
          type: string
          format: uuid
        bookingId:
          type: string
          format: uuid
        previousDepartureDate:
          type: string
          format: date
        newDepartureDate:
          type: string
          format: date
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - bookingId
        - previousDepartureDate
        - newDepartureDate
        - createdAt
    NewExtension:
      type: object
      properties:
        newDepartureDate:
          type: string
          format: date
        notes:
          type: string
      required:
        - newDepartureDate
    DateChange:
      type: object
      properties:
        id:
          type: string
          format: uuid
        bookingId:
          type: string
          format: uuid
        previousArrivalDate:
          type: string
          format: date
        newArrivalDate:
          type: string
          format: date
        previousDepartureDate:
          type: string
          format: date
        newDepartureDate:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - bookingId
        - previousArrivalDate
        - newArrivalDate
        - previousDepartureDate
        - newDepartureDate
        - createdAt
    NewDateChange:
      type: object
      properties:
        newArrivalDate:
          type: string
          format: date
        newDepartureDate:
          type: string
          format: date
    NewDeparture:
      type: object
      properties:
        dateTime:
          type: string
          format: date-time
        reasonId:
          type: string
          format: uuid
        notes:
          type: string
        moveOnCategoryId:
          type: string
          format: uuid
        destinationProviderId:
          type: string
          format: uuid
      required:
        - dateTime
        - reasonId
        - moveOnCategoryId
    Departure:
      type: object
      properties:
        id:
          type: string
          format: uuid
        bookingId:
          type: string
          format: uuid
        dateTime:
          type: string
          format: date-time
        reason:
          $ref: '#/components/schemas/DepartureReason'
        notes:
          type: string
        moveOnCategory:
          $ref: '#/components/schemas/MoveOnCategory'
        destinationProvider:
          $ref: '#/components/schemas/DestinationProvider'
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - bookingId
        - dateTime
        - reason
        - moveOnCategory
        - createdAt
    Confirmation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        bookingId:
          type: string
          format: uuid
        dateTime:
          type: string
          format: date-time
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - bookingId
        - dateTime
        - createdAt
    NewConfirmation:
      type: object
      properties:
        notes:
          type: string
    Turnaround:
      type: object
      properties:
        id:
          type: string
          format: uuid
        bookingId:
          type: string
          format: uuid
        workingDays:
          type: integer
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - bookingId
        - workingDays
        - createdAt
    NewTurnaround:
      type: object
      properties:
        workingDays:
          type: integer
      required:
        - workingDays
    Problem:
      type: object
      properties:
        type:
          type: string
          example: https://example.net/validation-error
        title:
          type: string
          example: Invalid request parameters
        status:
          type: integer
          example: 400
        detail:
          type: string
          example: You provided invalid request parameters
        instance:
          type: string
          example: f7493e12-546d-42c3-b838-06c12671ab5b
    ValidationError:
      allOf:
        - $ref: '#/components/schemas/Problem'
        - type: object
          properties:
            invalid-params:
              type: array
              items:
                $ref: '#/components/schemas/InvalidParam'
    InvalidParam:
      type: object
      properties:
        propertyName:
          type: string
          example: arrivalDate
        errorType:
          type: string
    LostBed:
      type: object
      properties:
        id:
          type: string
          format: uuid
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        bedId:
          type: string
          format: uuid
        bedName:
          type: string
        roomName:
          type: string
        reason:
          $ref: '#/components/schemas/LostBedReason'
        referenceNumber:
          type: string
        notes:
          type: string
        status:
          $ref: '#/components/schemas/LostBedStatus'
        cancellation:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/LostBedCancellation'
      required:
        - id
        - startDate
        - endDate
        - bedId
        - bedName
        - roomName
        - reason
        - status
    NewLostBed:
      type: object
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        reason:
          type: string
          format: uuid
        referenceNumber:
          type: string
        notes:
          type: string
        bedId:
          type: string
          format: uuid
      required:
        - startDate
        - endDate
        - reason
        - bedId
    UpdateLostBed:
      type: object
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        reason:
          type: string
          format: uuid
        referenceNumber:
          type: string
        notes:
          type: string
      required:
        - startDate
        - endDate
        - reason
    LostBedCancellation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        notes:
          type: string
      required:
        - id
        - createdAt
    NewLostBedCancellation:
      type: object
      properties:
        notes:
          type: string
    LostBedStatus:
      type: string
      enum:
        - active
        - cancelled
    DepartureReason:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Admitted to Hospital
        serviceScope:
          type: string
        parentReasonId:
          type: string
          format: uuid
        isActive:
          type: boolean
      required:
        - id
        - name
        - serviceScope
        - isActive
    MoveOnCategory:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Housing Association - Rented
        serviceScope:
          type: string
        isActive:
          type: boolean
      required:
        - id
        - name
        - serviceScope
        - isActive
    DestinationProvider:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Ext - North East Region
        isActive:
          type: boolean
      required:
        - id
        - name
        - isActive
    StaffMember:
      type: object
      properties:
        code:
          type: string
        keyWorker:
          type: boolean
        name:
          type: string
          example: Brown, James (PS - PSO)
      required:
        - code
        - keyWorker
        - name
    LostBedReason:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Double Room with Single Occupancy - Other (Non-FM)
        isActive:
          type: boolean
        serviceScope:
          type: string
      required:
        - id
        - name
        - isActive
        - serviceScope
    CancellationReason:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Recall
        isActive:
          type: boolean
        serviceScope:
          type: string
      required:
        - id
        - name
        - isActive
        - serviceScope
    NonArrivalReason:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Recall
        isActive:
          type: boolean
      required:
        - id
        - name
        - isActive
    DateCapacity:
      type: object
      properties:
        date:
          type: string
          format: date
        availableBeds:
          type: integer
          example: 10
      required:
        - date
        - availableBeds
    PersonRisks:
      type: object
      properties:
        crn:
          type: string
        roshRisks:
          $ref: '#/components/schemas/RoshRisksEnvelope'
        mappa:
          $ref: '#/components/schemas/MappaEnvelope'
        tier:
          $ref: '#/components/schemas/RiskTierEnvelope'
        flags:
          $ref: '#/components/schemas/FlagsEnvelope'
      required:
        - crn
        - roshRisks
        - tier
        - flags
    RoshRisksEnvelope:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/RiskEnvelopeStatus'
        value:
          $ref: '#/components/schemas/RoshRisks'
      required:
        - status
    RoshRisks:
      type: object
      properties:
        overallRisk:
          type: string
        riskToChildren:
          type: string
        riskToPublic:
          type: string
        riskToKnownAdult:
          type: string
        riskToStaff:
          type: string
        lastUpdated:
          type: string
          format: date
      required:
        - overallRisk
        - riskToChildren
        - riskToPublic
        - riskToKnownAdult
        - riskToStaff
    MappaEnvelope:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/RiskEnvelopeStatus'
        value:
          $ref: '#/components/schemas/Mappa'
      required:
        - status
    Mappa:
      type: object
      properties:
        level:
          type: string
        lastUpdated:
          type: string
          format: date
      required:
        - level
        - lastUpdated
    RiskTierEnvelope:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/RiskEnvelopeStatus'
        value:
          $ref: '#/components/schemas/RiskTier'
      required:
        - status
    RiskTier:
      type: object
      properties:
        level:
          type: string
        lastUpdated:
          type: string
          format: date
      required:
        - level
        - lastUpdated
    FlagsEnvelope:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/RiskEnvelopeStatus'
        value:
          type: array
          items:
            type: string
      required:
        - status
    RiskEnvelopeStatus:
      type: string
      enum:
        - retrieved
        - not_found
        - error
    PersonAcctAlert:
      type: object
      properties:
        alertId:
          type: integer
          format: int64
        comment:
          type: string
        description:
          type: string
        dateCreated:
          type: string
          format: date
        dateExpires:
          type: string
          format: date
        alertTypeDescription:
            type: string
      required:
        - alertId
        - dateCreated
    Application:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
          format: uuid
        person:
          $ref: '#/components/schemas/Person'
        createdAt:
          type: string
          format: date-time
      discriminator:
        propertyName: type
        mapping:
          Offline: '#/components/schemas/OfflineApplication'
          CAS1: '#/components/schemas/ApprovedPremisesApplication'
          CAS2: '#/components/schemas/Cas2Application'
          CAS2V2: '#/components/schemas/Cas2v2Application'
          CAS3: '#/components/schemas/TemporaryAccommodationApplication'
      required:
        - type
        - id
        - person
        - createdAt
    Cas2v2Application:
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            createdBy:
              $ref: '#/components/schemas/Cas2v2User'
            schemaVersion:
              type: string
              format: uuid
            outdatedSchema:
              type: boolean
            data:
              $ref: '#/components/schemas/Unit'
            document:
              $ref: '#/components/schemas/Unit'
            status:
              $ref: '#/components/schemas/ApplicationStatus'
            submittedAt:
              type: string
              format: date-time
            telephoneNumber:
              type: string
            assessment:
              $ref: '#/components/schemas/Cas2v2Assessment'
            timelineEvents:
              type: array
              items:
                $ref: '#/components/schemas/Cas2TimelineEvent'
            applicationOrigin:
              $ref: "#/components/schemas/ApplicationOrigin"
            bailHearingDate:
              type: string
              format: date
          required:
            - createdBy
            - schemaVersion
            - outdatedSchema
            - status
            - applicationOrigin
    Cas2v2Assessment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        nacroReferralId:
          type: string
        assessorName:
          type: string
        statusUpdates:
          type: array
          items:
            $ref: '#/components/schemas/Cas2v2StatusUpdate'
      required:
        - id
    Cas2v2User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: 'Roger Smith'
        username:
          type: string
          example: 'SMITHR_GEN'
        authSource:
          type: string
          enum:
            - nomis
            - delius
            - auth
        email:
          type: string
          example: 'Roger.Smith@justice.gov.uk'
        isActive:
          type: boolean
          example: true
      required:
        - id
        - name
        - username
        - authSource
        - isActive
    Cas2v2StatusUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: 'moreInfoRequested'
        label:
          type: string
          example: 'More information requested'
        description:
          type: string
          example: 'More information about the application has been requested from the HMPPS user.'
        updatedBy:
          $ref: '#/components/schemas/Cas2v2User'
        updatedAt:
          type: string
          format: date-time
        statusUpdateDetails:
          type: array
          items:
            $ref: '#/components/schemas/Cas2v2StatusUpdateDetail'
      required:
        - id
        - name
        - label
        - description
    Cas2v2StatusUpdateDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: 'moreInfoRequested'
        label:
          type: string
          example: 'More information requested'
      required:
        - id
        - name
        - label
    OfflineApplication:
      allOf:
        - $ref: '#/components/schemas/Application'
    ApprovedPremisesApplication:
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            isWomensApplication:
              type: boolean
            isPipeApplication:
              deprecated: true
              description: Use apType
              type: boolean
            isEmergencyApplication:
              type: boolean
            isEsapApplication:
              deprecated: true
              description: Use apType
              type: boolean
            apType:
              $ref: '#/components/schemas/ApType'
            arrivalDate:
              type: string
              format: date-time
            risks:
              $ref: '#/components/schemas/PersonRisks'
            createdByUserId:
              type: string
              format: uuid
            schemaVersion:
              type: string
              format: uuid
            outdatedSchema:
              type: boolean
            data:
              $ref: '#/components/schemas/Unit'
            document:
              $ref: '#/components/schemas/Unit'
            status:
              $ref: '#/components/schemas/ApprovedPremisesApplicationStatus'
            assessmentId:
              type: string
              format: uuid
            assessmentDecision:
              $ref: '#/components/schemas/AssessmentDecision'
            assessmentDecisionDate:
              type: string
              format: date
            submittedAt:
              type: string
              format: date-time
            personStatusOnSubmission:
              $ref: '#/components/schemas/PersonStatus'
            apArea:
              $ref: '#/components/schemas/ApArea'
            cruManagementArea:
              $ref: '#/components/schemas/Cas1CruManagementArea'
            applicantUserDetails:
              $ref: '#/components/schemas/Cas1ApplicationUserDetails'
            caseManagerIsNotApplicant:
              description: "If true, caseManagerUserDetails will provide case manager details. Otherwise, applicantUserDetails can be used for case manager details"
              type: boolean
            caseManagerUserDetails:
              $ref: '#/components/schemas/Cas1ApplicationUserDetails'
            licenceExpiryDate:
              type: string
              format: date
          required:
            - createdByUserId
            - schemaVersion
            - outdatedSchema
            - status
    Cas2Application:
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            createdBy:
              $ref: '#/components/schemas/NomisUser'
            schemaVersion:
              type: string
              format: uuid
            outdatedSchema:
              type: boolean
            data:
              $ref: '#/components/schemas/Unit'
            document:
              $ref: '#/components/schemas/Unit'
            status:
              $ref: '#/components/schemas/ApplicationStatus'
            submittedAt:
              type: string
              format: date-time
            telephoneNumber:
              type: string
            assessment:
              $ref: '#/components/schemas/Cas2Assessment'
            timelineEvents:
              type: array
              items:
                $ref: '#/components/schemas/Cas2TimelineEvent'
          required:
            - createdBy
            - schemaVersion
            - outdatedSchema
            - status
    Cas2SubmittedApplication:
      type: object
      properties:
        id:
          type: string
          format: uuid
        person:
          $ref: '#/components/schemas/Person'
        createdAt:
          type: string
          format: date-time
        submittedBy:
          $ref: '#/components/schemas/NomisUser'
        schemaVersion:
          type: string
          format: uuid
        outdatedSchema:
          type: boolean
        document:
          $ref: '#/components/schemas/Unit'
        submittedAt:
          type: string
          format: date-time
        telephoneNumber:
          type: string
        timelineEvents:
          type: array
          items:
            $ref: '#/components/schemas/Cas2TimelineEvent'
        assessment:
          $ref: '#/components/schemas/Cas2Assessment'
      required:
        - id
        - person
        - createdAt
        - createdBy
        - schemaVersion
        - outdatedSchema
        - status
        - timelineEvents
        - assessment
    TemporaryAccommodationApplication:
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            createdByUserId:
              type: string
              format: uuid
            schemaVersion:
              type: string
              format: uuid
            outdatedSchema:
              type: boolean
            data:
              $ref: '#/components/schemas/Unit'
            document:
              $ref: '#/components/schemas/Unit'
            status:
              $ref: '#/components/schemas/ApplicationStatus'
            risks:
              $ref: '#/components/schemas/PersonRisks'
            submittedAt:
              type: string
              format: date-time
            arrivalDate:
              type: string
              format: date-time
            offenceId:
              type: string
            assessmentId:
              type: string
              format: uuid
          required:
            - createdByUserId
            - schemaVersion
            - outdatedSchema
            - status
            - offenceId
    ApplicationSummary:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
          format: uuid
        person:
          $ref: '#/components/schemas/Person'
        createdAt:
          type: string
          format: date-time
        submittedAt:
          type: string
          format: date-time
      discriminator:
        propertyName: type
        mapping:
          Offline: '#/components/schemas/OfflineApplicationSummary'
          CAS1: '#/components/schemas/ApprovedPremisesApplicationSummary'
          CAS2: '#/components/schemas/Cas2ApplicationSummary'
          CAS3: '#/components/schemas/TemporaryAccommodationApplicationSummary'
      required:
        - type
        - id
        - person
        - createdAt
    OfflineApplicationSummary:
      allOf:
        - $ref: '#/components/schemas/ApplicationSummary'
    ApprovedPremisesApplicationSummary:
      allOf:
        - $ref: '#/components/schemas/ApplicationSummary'
        - type: object
          properties:
            isWomensApplication:
              type: boolean
            isPipeApplication:
              type: boolean
            isEmergencyApplication:
              type: boolean
            isEsapApplication:
              type: boolean
            arrivalDate:
              type: string
              format: date-time
            risks:
              $ref: '#/components/schemas/PersonRisks'
            createdByUserId:
              type: string
              format: uuid
            status:
              $ref: '#/components/schemas/ApprovedPremisesApplicationStatus'
            tier:
              type: string
            isWithdrawn:
              type: boolean
            releaseType:
              $ref: '#/components/schemas/ReleaseTypeOption'
            hasRequestsForPlacement:
              type: boolean
          required:
            - createdByUserId
            - status
            - isWithdrawn
            - hasRequestsForPlacement
    TemporaryAccommodationApplicationSummary:
      allOf:
        - $ref: '#/components/schemas/ApplicationSummary'
        - type: object
          properties:
            createdByUserId:
              type: string
              format: uuid
            status:
              $ref: '#/components/schemas/ApplicationStatus'
            risks:
              $ref: '#/components/schemas/PersonRisks'
          required:
            - createdByUserId
            - status
    Cas2ApplicationSummary:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        submittedAt:
          type: string
          format: date-time
        createdByUserId:
          type: string
          format: uuid
        createdByUserName:
          type: string
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        latestStatusUpdate:
          $ref: '#/components/schemas/LatestCas2StatusUpdate'
        risks:
          $ref: '#/components/schemas/PersonRisks'
        hdcEligibilityDate:
          type: string
          format: date
        personName:
          type: string
        crn:
          type: string
        nomsNumber:
          type: string
      required:
        - type
        - id
        - createdAt
        - createdByUserId
        - status
        - personName
        - crn
        - nomsNumber
    NewCas2ApplicationNote:
      type: object
      properties:
        note:
          type: string
      required:
        - note
      description: A note to add to an application
    Cas2ApplicationNote:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          example: 'roger@example.com'
        name:
          type: string
          example: 'Roger Smith'
        body:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - username
        - email
        - name
        - body
        - createdAt
      description: Notes added to an application
    Cas2ApplicationStatus:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: 'moreInfoRequested'
        label:
          type: string
          example: 'More information requested'
        description:
          type: string
          example: 'More information about the application has been requested from the POM (Prison Offender Manager).'
        statusDetails:
          type: array
          items:
            $ref: '#/components/schemas/Cas2ApplicationStatusDetail'
      required:
        - id
        - name
        - label
        - description
        - statusDetails
    Cas2ApplicationStatusDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: 'changeOfCircumstances'
        label:
          type: string
          example: 'Change of Circumstances'
      required:
        - id
        - name
        - label
    Cas2AssessmentStatusUpdate:
      type: object
      properties:
        newStatus:
          type: string
          example: 'moreInfoRequired'
          description: 'The "name" of the new status to be applied'
        newStatusDetails:
          type: array
          items:
            type: string
            example: 'changeOfCircumstances'
            description: 'The "name" of the new detail belonging to the new status'
      required:
        - newStatus
    Cas2SubmittedApplicationSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdByUserId:
          type: string
          format: uuid
        crn:
          type: string
        nomsNumber:
          type: string
        personName:
          type: string
        createdAt:
          type: string
          format: date-time
        submittedAt:
          type: string
          format: date-time
      required:
        - createdByUserId
        - status
        - id
        - person
        - createdAt
        - personName
        - crn
        - nomsNumber
    Cas2StatusUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: 'moreInfoRequested'
        label:
          type: string
          example: 'More information requested'
        description:
          type: string
          example: 'More information about the application has been requested from the POM (Prison Offender Manager).'
        updatedBy:
          $ref: '#/components/schemas/ExternalUser'
        updatedAt:
          type: string
          format: date-time
        statusUpdateDetails:
          type: array
          items:
            $ref: '#/components/schemas/Cas2StatusUpdateDetail'
      required:
        - id
        - name
        - label
        - description
    Cas2StatusUpdateDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: 'moreInfoRequested'
        label:
          type: string
          example: 'More information requested'
      required:
        - id
        - name
        - label
    LatestCas2StatusUpdate:
      type: object
      properties:
        statusId:
          type: string
          format: uuid
        label:
          type: string
          example: 'More information requested'
      required:
        - statusId
        - label
    ApplicationStatus:
      type: string
      enum:
        - inProgress
        - submitted
        - requestedFurtherInformation
        - pending
        - rejected
        - awaitingPlacement
        - placed
        - inapplicable
        - withdrawn
    ApprovedPremisesApplicationStatus:
      type: string
      enum:
        - started
        - submitted
        - rejected
        - awaitingAssesment
        - unallocatedAssesment
        - assesmentInProgress
        - awaitingPlacement
        - placementAllocated
        - inapplicable
        - withdrawn
        - requestedFurtherInformation
        - pendingPlacementRequest
        - expired
    Unit:
      description: Any object
      type: object
    ApplicationTimelineNote:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdByUser:
          $ref: '#/components/schemas/User'
        note:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - createdByUserId
        - note
      description: Notes added to an application
    NewApplicationTimelineNote:
      type: object
      properties:
        note:
          type: string
      required:
        - note
      description: A note to add to an application
    ApplicationOrigin:
        type: string
        default: homeDetentionCurfew
        enum:
          - courtBail
          - prisonBail
          - homeDetentionCurfew
    NewApplication:
      type: object
      properties:
        crn:
          type: string
        convictionId:
          type: integer
          format: int64
          example: 1502724704
        deliusEventNumber:
          type: string
          example: "7"
        offenceId:
          type: string
          example: "M1502750438"
      required:
        - crn
    UpdateApplicationType:
      type: string
      enum:
        - CAS1
        - CAS2
        - CAS3
        - CAS2V2
      x-enum-varnames:
        - CAS1
        - CAS2
        - CAS3
        - CAS2V2
    UpdateApplication:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/UpdateApplicationType'
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Unit'
      discriminator:
        propertyName: type
        mapping:
          CAS1: '#/components/schemas/UpdateApprovedPremisesApplication'
          CAS2: '#/components/schemas/UpdateCas2Application'
          CAS3: '#/components/schemas/UpdateTemporaryAccommodationApplication'
          CAS2V2: '#/components/schemas/UpdateCas2v2Application'
      required:
        - type
        - data
    UpdateCas2Application:
      allOf:
        - $ref: '#/components/schemas/UpdateApplication'
    UpdateCas2v2Application:
      allOf:
        - $ref: '#/components/schemas/UpdateApplication'
        - type: object
          properties:
            bailHearingDate:
              type: string
              format: date
    UpdateApprovedPremisesApplication:
      allOf:
        - $ref: '#/components/schemas/UpdateApplication'
        - type: object
          properties:
            isInapplicable:
              type: boolean
            isWomensApplication:
              type: boolean
            isPipeApplication:
              deprecated: true
              description: Use apType
              type: boolean
            isEmergencyApplication:
              deprecated: true
              description: noticeType should be used to indicate if an emergency application
              type: boolean
            isEsapApplication:
              deprecated: true
              description: Use apType
              type: boolean
            apType:
              $ref: '#/components/schemas/ApType'
            targetLocation:
              type: string
            releaseType:
              $ref: '#/components/schemas/ReleaseTypeOption'
            arrivalDate:
              type: string
              format: date
            noticeType:
              $ref: '#/components/schemas/Cas1ApplicationTimelinessCategory'
    UpdateTemporaryAccommodationApplication:
      allOf:
        - $ref: '#/components/schemas/UpdateApplication'
    SubmitApplication:
      type: object
      properties:
        type:
          type: string
        translatedDocument:
          $ref: '#/components/schemas/Unit'
      discriminator:
        propertyName: type
        mapping:
          CAS1: '#/components/schemas/SubmitApprovedPremisesApplication'
          CAS3: '#/components/schemas/SubmitTemporaryAccommodationApplication'
          CAS2: '#/components/schemas/SubmitCas2Application'
      # Ideally translatedDocument would be marked required here, but there is a bug
      # in open api generator that leads to the subclass marking this as kotlin.Any?
      # whilst in the superclass it has the type kotlin.Any. This leads to a compilation
      # error as the override has the incorrect type.
      required:
        - type
    SubmitApprovedPremisesApplication:
      allOf:
        - $ref: '#/components/schemas/SubmitApplication'
        - type: object
          properties:
            isPipeApplication:
              deprecated: true
              description: Use apType
              type: boolean
            isWomensApplication:
              type: boolean
            isEmergencyApplication:
              deprecated: true
              description: noticeType should be used to indicate if this an emergency application
              type: boolean
            isEsapApplication:
              deprecated: true
              description: Use apType
              type: boolean
            apType:
              $ref: '#/components/schemas/ApType'
            targetLocation:
              type: string
            releaseType:
              $ref: '#/components/schemas/ReleaseTypeOption'
            sentenceType:
              $ref: '#/components/schemas/SentenceTypeOption'
            situation:
              $ref: '#/components/schemas/SituationOption'
            arrivalDate:
              type: string
              format: date
            apAreaId:
              description: If the user's ap area id is incorrect, they can optionally override it for the application
              type: string
              format: uuid
            applicantUserDetails:
              $ref: '#/components/schemas/Cas1ApplicationUserDetails'
            caseManagerIsNotApplicant:
              type: boolean
            caseManagerUserDetails:
              $ref: '#/components/schemas/Cas1ApplicationUserDetails'
            noticeType:
              $ref: '#/components/schemas/Cas1ApplicationTimelinessCategory'
            reasonForShortNotice:
              type: string
            reasonForShortNoticeOther:
              type: string
            licenseExpiryDate:
              type: string
              format: date
          required:
            - targetLocation
            - releaseType
            - sentenceType
    SubmitCas2Application:
      type: object
      properties:
        translatedDocument:
          $ref: '#/components/schemas/Unit'
        applicationId:
          type: string
          format: uuid
          description: Id of the application being submitted
        preferredAreas:
          type: string
          description: First and second preferences for where the accommodation should be located, pipe-separated
          example: 'Leeds | Bradford'
        hdcEligibilityDate:
          type: string
          example: '2023-03-30'
          format: date
        conditionalReleaseDate:
          type: string
          example: '2023-04-30'
          format: date
        telephoneNumber:
          type: string
      required:
        - translatedDocument
        - applicationId
        - telephoneNumber
    SubmitTemporaryAccommodationApplication:
      allOf:
        - $ref: '#/components/schemas/SubmitApplication'
        - type: object
          properties:
            arrivalDate:
              type: string
              format: date
            isRegisteredSexOffender:
              type: boolean
            needsAccessibleProperty:
              type: boolean
            hasHistoryOfArson:
              type: boolean
            isDutyToReferSubmitted:
              type: boolean
            dutyToReferSubmissionDate:
              type: string
              format: date
            dutyToReferOutcome:
              type: string
              example: 'Pending'
            isApplicationEligible:
              type: boolean
            eligibilityReason:
              type: string
            dutyToReferLocalAuthorityAreaName:
              type: string
            personReleaseDate:
              type: string
              format: date
              example: '2024-02-21'
            pdu:
              type: string
            probationDeliveryUnitId:
              type: string
              format: uuid
            isHistoryOfSexualOffence:
              type: boolean
            isConcerningSexualBehaviour:
              type: boolean
            isConcerningArsonBehaviour:
              type: boolean
            prisonReleaseTypes:
              type: array
              items:
                type: string
                example: 'PSS'
            summaryData:
              $ref: '#/components/schemas/Unit'
          required:
            - arrivalDate
            - summaryData
    ReleaseTypeOption:
      type: string
      enum:
        - licence
        - rotl
        - hdc
        - pss
        - in_community
        - not_applicable
        - extendedDeterminateLicence
        - paroleDirectedLicence
        - reReleasedPostRecall
    SentenceTypeOption:
      type: string
      enum:
        - standardDeterminate
        - life
        - ipp
        - extendedDeterminate
        - communityOrder
        - bailPlacement
        - nonStatutory
    SituationOption:
      type: string
      enum:
        - riskManagement
        - residencyManagement
        - bailAssessment
        - bailSentence
        - awaitingSentence
    Cas1ApplicationTimelinessCategory:
      type: string
      enum:
        - standard
        - emergency
        - shortNotice
    PrisonCaseNote:
      type: object
      properties:
        id:
          type: string
        sensitive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        occurredAt:
          type: string
          format: date-time
        authorName:
          type: string
        type:
          type: string
        subType:
          type: string
        note:
          type: string
      required:
        - id
        - sensitive
        - createdAt
        - occurredAt
        - authorName
        - type
        - subType
        - note
    Adjudication:
      type: object
      properties:
        id:
          type: integer
          format: int64
        reportedAt:
          type: string
          format: date-time
        establishment:
          type: string
        offenceDescription:
          type: string
          example: "Wounding or inflicting grievous bodily harm (inflicting bodily injury with or without weapon) (S20) - 00801"
        hearingHeld:
          type: boolean
        finding:
          type: string
      required:
        - id
        - reportedAt
        - establishment
        - offenceDescription
        - hearingHeld
    Assessment:
      type: object
      properties:
        service:
          type: string
        id:
          type: string
          format: uuid
        schemaVersion:
          type: string
          format: uuid
        outdatedSchema:
          type: boolean
        createdAt:
          type: string
          format: date-time
        allocatedAt:
          type: string
          format: date-time
        submittedAt:
          type: string
          format: date-time
        decision:
          $ref: '#/components/schemas/AssessmentDecision'
        rejectionRationale:
          type: string
        data:
          $ref: '#/components/schemas/Unit'
        clarificationNotes:
          type: array
          items:
            $ref: '#/components/schemas/ClarificationNote'
      discriminator:
        propertyName: service
        mapping:
          CAS1: '#/components/schemas/ApprovedPremisesAssessment'
          CAS3: '#/components/schemas/TemporaryAccommodationAssessment'
      required:
        - service
        - id
        - allocatedToUser
        - schemaVersion
        - outdatedSchema
        - createdAt
        - clarificationNotes
    AssessmentStatus:
      type: string
      enum:
        - awaiting_response
        - completed
        - reallocated
        - in_progress
        - not_started
        - unallocated
        - in_review
        - ready_to_place
        - closed
        - rejected
      x-enum-varnames:
        - cas1AwaitingResponse
        - cas1Completed
        - cas1Reallocated
        - cas1InProgress
        - cas1NotStarted
        - cas3Unallocated
        - cas3InReview
        - cas3ReadyToPlace
        - cas3Closed
        - cas3Rejected
    ApprovedPremisesAssessmentStatus:
      type: string
      enum:
        - awaiting_response
        - completed
        - reallocated
        - in_progress
        - not_started
    TemporaryAccommodationAssessmentStatus:
      type: string
      enum:
        - unallocated
        - in_review
        - ready_to_place
        - closed
        - rejected
    ApprovedPremisesAssessment:
      allOf:
        - $ref: '#/components/schemas/Assessment'
        - type: object
          properties:
            application:
              $ref: '#/components/schemas/ApprovedPremisesApplication'
            allocatedToStaffMember:
              $ref: '#/components/schemas/ApprovedPremisesUser'
            status:
              $ref: '#/components/schemas/ApprovedPremisesAssessmentStatus'
            createdFromAppeal:
              type: boolean
          required:
            - application
            - createdFromAppeal
    TemporaryAccommodationAssessment:
      allOf:
        - $ref: '#/components/schemas/Assessment'
        - type: object
          properties:
            application:
              $ref: '#/components/schemas/TemporaryAccommodationApplication'
            allocatedToStaffMember:
              $ref: '#/components/schemas/TemporaryAccommodationUser'
            status:
              $ref: '#/components/schemas/TemporaryAccommodationAssessmentStatus'
            summaryData:
              $ref: '#/components/schemas/Unit'
            releaseDate:
              type: string
              format: date
            accommodationRequiredFromDate:
              type: string
              format: date

          required:
            - application
            - summaryData
    Cas2Assessment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        nacroReferralId:
          type: string
        assessorName:
          type: string
        statusUpdates:
          type: array
          items:
            $ref: '#/components/schemas/Cas2StatusUpdate'
      required:
        - id
    UpdateCas2Assessment:
      type: object
      properties:
        nacroReferralId:
          type: string
        assessorName:
          type: string
    AssessmentSummary:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
          format: uuid
        applicationId:
          type: string
          format: uuid
        arrivalDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        dateOfInfoRequest:
          type: string
          format: date-time
        decision:
          $ref: '#/components/schemas/AssessmentDecision'
        risks:
          $ref: '#/components/schemas/PersonRisks'
        person:
          $ref: '#/components/schemas/Person'
      required:
        - type
        - id
        - applicationId
        - createdAt
        - person
      discriminator:
        propertyName: type
        mapping:
          CAS1: '#/components/schemas/ApprovedPremisesAssessmentSummary'
          CAS3: '#/components/schemas/TemporaryAccommodationAssessmentSummary'
    ApprovedPremisesAssessmentSummary:
      allOf:
        - $ref: '#/components/schemas/AssessmentSummary'
        - type: object
          properties:
            status:
              $ref: '#/components/schemas/ApprovedPremisesAssessmentStatus'
            dueAt:
              type: string
              format: date-time
          required:
            - status
            - dueAt
    TemporaryAccommodationAssessmentSummary:
      allOf:
        - $ref: '#/components/schemas/AssessmentSummary'
        - type: object
          properties:
            status:
              $ref: '#/components/schemas/TemporaryAccommodationAssessmentStatus'
            probationDeliveryUnitName:
              type: string
          required:
            - status
    AssessmentSortField:
      type: string
      enum:
        - name
        - crn
        - arrivalDate
        - status
        - createdAt
        - dueAt
        - probationDeliveryUnitName
      x-enum-varnames:
        - personName
        - personCrn
        - assessmentArrivalDate
        - assessmentStatus
        - assessmentCreatedAt
        - assessmentDueAt
        - applicationProbationDeliveryUnitName
    AssessmentDecision:
      type: string
      enum:
        - accepted
        - rejected
    UpdatePremises:
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        town:
          type: string
        postcode:
          type: string
        notes:
          type: string
        localAuthorityAreaId:
          type: string
          format: uuid
        probationRegionId:
          type: string
          format: uuid
        characteristicIds:
          type: array
          items:
            type: string
            format: uuid
        status:
          $ref: '#/components/schemas/PropertyStatus'
        pdu:
          type: string
        probationDeliveryUnitId:
          type: string
          format: uuid
        turnaroundWorkingDayCount:
          type: integer
        name:
          type: string
      required:
        - addressLine1
        - postcode
        - probationRegionId
        - characteristicIds
        - status
    UpdateAssessment:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Unit'
        releaseDate:
          type: string
          format: date
        accommodationRequiredFromDate:
          type: string
          format: date
      required:
        - data
    AssessmentAcceptance:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/Unit'
        requirements:
          $ref: '#/components/schemas/PlacementRequirements'
        placementDates:
          $ref: '#/components/schemas/PlacementDates'
        apType:
          $ref: '#/components/schemas/ApType'
        notes:
          type: string
        agreeWithShortNoticeReason:
          type: boolean
        agreeWithShortNoticeReasonComments:
          type: string
        reasonForLateApplication:
          type: string
      required:
        - document
    AssessmentRejection:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/Unit'
        rejectionRationale:
          type: string
        referralRejectionReasonId:
          type: string
          format: uuid
        referralRejectionReasonDetail:
          type: string
        isWithdrawn:
          type: boolean
        agreeWithShortNoticeReason:
          type: boolean
        agreeWithShortNoticeReasonComments:
          type: string
        reasonForLateApplication:
          type: string
      required:
        - document
        - rejectionRationale
    ClarificationNote:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        responseReceivedOn:
          type: string
          format: date
        createdByStaffMemberId:
          type: string
          format: uuid
        query:
          type: string
        response:
          type: string
      required:
        - id
        - createdAt
        - createdByStaffMemberId
        - query
    UpdatedClarificationNote:
      type: object
      properties:
        response:
          type: string
        responseReceivedOn:
          type: string
          format: date
          example: 2022-07-28
      required:
        - response
        - responseReceivedOn
    NewClarificationNote:
      type: object
      properties:
        query:
          type: string
      required:
        - query
    ReferralHistoryNote:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        message:
          type: string
        messageDetails:
          $ref: '#/components/schemas/ReferralHistoryNoteMessageDetails'
        createdByUserName:
          type: string
        type:
          type: string
      required:
        - id
        - createdAt
        - createdByUserName
        - type
      discriminator:
        propertyName: type
        mapping:
          user: '#/components/schemas/ReferralHistoryUserNote'
          system: '#/components/schemas/ReferralHistorySystemNote'
          domainEvent: '#/components/schemas/ReferralHistoryDomainEventNote'
    ReferralHistoryNoteMessageDetails:
      type: object
      properties:
        rejectionReason:
          type: string
        rejectionReasonDetails:
          type: string
        isWithdrawn:
          type: boolean
        domainEvent:
          $ref: '#/components/schemas/Unit'
    ReferralHistoryDomainEventNote:
      type: object
      allOf:
        - $ref: '#/components/schemas/ReferralHistoryNote'
    ReferralHistoryUserNote:
      allOf:
        - $ref: '#/components/schemas/ReferralHistoryNote'
    ReferralHistorySystemNote:
      allOf:
        - $ref: '#/components/schemas/ReferralHistoryNote'
        - type: object
          properties:
            category:
              type: string
              enum:
                - submitted
                - unallocated
                - in_review
                - ready_to_place
                - rejected
                - completed
          required:
            - category
    NewReferralHistoryUserNote:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    NewReallocation:
      type: object
      properties:
        userId:
          type: string
          format: uuid
    Reallocation:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/ApprovedPremisesUser'
        taskType:
          $ref: '#/components/schemas/TaskType'
      required:
        - user
        - taskType
    ExternalUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
          example: 'CAS2_ASSESSOR_USER'
        name:
          type: string
          example: 'Roger Smith'
        email:
          type: string
          example: 'roger@external.example.com'
        origin:
          type: string
          example: 'NACRO'
      required:
        - id
        - username
        - name
        - email
    NomisUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: 'Roger Smith'
        nomisUsername:
          type: string
          example: 'SMITHR_GEN'
        email:
          type: string
          example: 'Roger.Smith@justice.gov.uk'
        isActive:
          type: boolean
          example: true
      required:
        - id
        - name
        - nomisUsername
        - isActive
    User:
      type: object
      properties:
        service:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        deliusUsername:
          type: string
        email:
          type: string
        telephoneNumber:
          type: string
        isActive:
          type: boolean
        region:
          $ref: '#/components/schemas/ProbationRegion'
        probationDeliveryUnit:
          $ref: '#/components/schemas/ProbationDeliveryUnit'
      discriminator:
        propertyName: service
        mapping:
          CAS1: '#/components/schemas/ApprovedPremisesUser'
          CAS3: '#/components/schemas/TemporaryAccommodationUser'
      required:
        - service
        - id
        - name
        - deliusUsername
        - region
    UserSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    UserWithWorkload:
      description: This should be changed to embed the user as a property of this type, instead of 'extending' User. Currently this causes unmarshalling issues in integration tests, if using Jackson, due to discriminators not being logically correct
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            numTasksPending:
              type: integer
            numTasksCompleted7Days:
              type: integer
            numTasksCompleted30Days:
              type: integer
            qualifications:
              type: array
              items:
                $ref: '#/components/schemas/UserQualification'
            roles:
              type: array
              items:
                $ref: '#/components/schemas/ApprovedPremisesUserRole'
            apArea:
              deprecated: true
              description: This is deprecated. Used cruManagementArea instead as this is used to group task management
              allOf:
                - $ref: '#/components/schemas/ApArea'
            cruManagementArea:
              allOf:
                - $ref: "#/components/schemas/NamedId"
    ApprovedPremisesUser:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            qualifications:
              type: array
              items:
                $ref: '#/components/schemas/UserQualification'
            roles:
              type: array
              items:
                $ref: '#/components/schemas/ApprovedPremisesUserRole'
            permissions:
              type: array
              items:
                $ref: '#/components/schemas/ApprovedPremisesUserPermission'
            apArea:
              $ref: '#/components/schemas/ApArea'
            cruManagementArea:
              description: CRU Management Area to use. This will be the same as cruManagementAreaDefault unless cruManagementAreaOverride is defined
              allOf:
                - $ref: "#/components/schemas/NamedId"
            cruManagementAreaDefault:
              description: The CRU Management Area used if no override is defined. This is provided to support the user configuration page.
              allOf:
                - $ref: "#/components/schemas/NamedId"
            cruManagementAreaOverride:
              description: The CRU Management Area manually set on this user. This is provided to support the user configuration page.
              allOf:
                - $ref: "#/components/schemas/NamedId"
            version:
              type: integer
          required:
            - qualifications
            - roles
            - apArea
            - cruManagementArea
            - cruManagementAreaDefault
    UserRolesAndQualifications:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/ApprovedPremisesUserRole'
        qualifications:
          type: array
          items:
            $ref: '#/components/schemas/UserQualification'
      required:
        - roles
        - qualifications
    ProfileResponse:
      type: object
      properties:
        deliusUsername:
          type: string
        loadError:
          type: string
          enum:
            - staff_record_not_found
        user:
          $ref: '#/components/schemas/User'
      required:
        - deliusUsername
    TemporaryAccommodationUser:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            roles:
              type: array
              items:
                $ref: '#/components/schemas/TemporaryAccommodationUserRole'
          required:
            - roles
    ApprovedPremisesUserRole:
      type: string
      enum:
        - assessor
        - matcher
        - future_manager
        - workflow_manager
        - cru_member
        - cru_member_find_and_book_beta
        - cru_member_enable_out_of_service_beds
        - applicant
        - report_viewer
        - report_viewer_with_pii
        - excluded_from_assess_allocation
        - excluded_from_match_allocation
        - excluded_from_placement_application_allocation
        - appeals_manager
        - janitor
        - user_manager
    ApprovedPremisesUserPermission:
      type: string
      enum:
        - cas1_adhoc_booking_create
        - cas1_application_withdraw_others
        - cas1_assess_appealed_application
        - cas1_assess_application
        - cas1_assess_placement_application
        - cas1_assess_placement_request
        - cas1_booking_create
        - cas1_booking_change_dates
        - cas1_booking_withdraw
        - cas1_out_of_service_bed_create
        - cas1_process_an_appeal
        - cas1_user_list
        - cas1_user_management
        - cas1_view_assigned_assessments
        - cas1_view_cru_dashboard
        - cas1_view_manage_tasks
        - cas1_view_out_of_service_beds
        - cas1_request_for_placement_withdraw_others
        - cas1_space_booking_create
        - cas1_space_booking_list
        - cas1_space_booking_record_arrival
        - cas1_space_booking_record_departure
        - cas1_space_booking_record_non_arrival
        - cas1_space_booking_record_keyworker
        - cas1_space_booking_view
        - cas1_space_booking_withdraw
        - cas1_premises_view
        - cas1_premises_manage
        - cas1_reports_view
        - cas1_reports_view_with_pii
    TemporaryAccommodationUserRole:
      type: string
      enum:
        - assessor
        - referrer
        - reporter
    UserQualification:
      type: string
      enum:
        - pipe
        - lao
        - emergency
        - esap
        - recovery_focused
        - mental_health_specialist
    ServiceName:
      type: string
      enum:
        - approved-premises
        - cas2
        - cas2v2
        - temporary-accommodation
      x-enum-varnames:
        - approvedPremises
        - cas2
        - cas2v2
        - temporaryAccommodation
    NewRoom:
      type: object
      properties:
        name:
          type: string
        notes:
          type: string
        characteristicIds:
          type: array
          items:
            type: string
            format: uuid
        bedEndDate:
          type: string
          format: date
          example: 2024-03-30
          description: End date of the bed availability, open for availability if not specified.
      required:
        - name
        - characteristicIds
    UpdateRoom:
      type: object
      properties:
        notes:
          type: string
        characteristicIds:
          type: array
          items:
            type: string
            format: uuid
        name:
          type: string
        bedEndDate:
          type: string
          format: date
          example: 2024-03-30
          description: End date of the bed availability, open for availability if not specified
      required:
        - characteristicIds
    Room:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        code:
          type: string
          example: NEABC-4
        notes:
          type: string
        beds:
          type: array
          items:
            $ref: '#/components/schemas/Bed'
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
      required:
        - id
        - name
        - characteristics
    Bed:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        code:
          type: string
          example: NEABC04
        bedEndDate:
          type: string
          format: date
          example: 2024-03-30
          description: End date of the bed availability, open for availability if not specified
      required:
        - id
        - name
    BedSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        roomName:
          type: string
        status:
          $ref: '#/components/schemas/BedStatus'
      required:
        - id
        - name
        - roomName
        - status
    BedDetail:
      allOf:
        - $ref: '#/components/schemas/BedSummary'
        - type: object
          properties:
            characteristics:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicPair'
          required:
            - characteristics
    BedStatus:
      type: string
      enum:
        - occupied
        - available
        - out_of_service
    PropertyStatus:
      type: string
      enum:
        - pending
        - active
        - archived
    OASysAssessmentId:
      description: The ID of assessment being used. This should always be the latest Layer 3 assessment, regardless of state.
      type: integer
      format: int64
      example: 138985987
    OASysSupportingInformationQuestion:
      type: object
      properties:
        label:
          type: string
        sectionNumber:
          type: integer
        questionNumber:
          type: string
        linkedToHarm:
          type: boolean
        linkedToReOffending:
          type: boolean
        answer:
          type: string
      required:
        - label
        - questionNumber
    OASysQuestion:
      type: object
      properties:
        label:
          type: string
        questionNumber:
          type: string
        answer:
          type: string
      required:
        - label
        - questionNumber
    OASysSections:
      type: object
      properties:
        assessmentId:
          $ref: '#/components/schemas/OASysAssessmentId'
        assessmentState:
          $ref: '#/components/schemas/OASysAssessmentState'
        dateStarted:
          type: string
          format: date-time
        dateCompleted:
          type: string
          format: date-time
        offenceDetails:
          type: array
          items:
            $ref: '#/components/schemas/OASysQuestion'
        roshSummary:
          type: array
          items:
            $ref: '#/components/schemas/OASysQuestion'
        supportingInformation:
          type: array
          items:
            $ref: '#/components/schemas/OASysSupportingInformationQuestion'
        riskToSelf:
          type: array
          items:
            $ref: '#/components/schemas/OASysQuestion'
        riskManagementPlan:
          type: array
          items:
            $ref: '#/components/schemas/OASysQuestion'
      required:
        - assessmentId
        - assessmentState
        - dateStarted
        - offenceDetails
        - roshSummary
        - supportingInformation
        - riskToSelf
        - riskManagementPlan
    OASysRiskToSelf:
      type: object
      properties:
        assessmentId:
          $ref: '#/components/schemas/OASysAssessmentId'
        assessmentState:
          $ref: '#/components/schemas/OASysAssessmentState'
        dateStarted:
          type: string
          format: date-time
        dateCompleted:
          type: string
          format: date-time
        riskToSelf:
          type: array
          items:
            $ref: '#/components/schemas/OASysQuestion'
      required:
        - assessmentId
        - assessmentState
        - dateStarted
        - riskToSelf
    OASysRiskOfSeriousHarm:
      type: object
      properties:
        assessmentId:
          $ref: '#/components/schemas/OASysAssessmentId'
        assessmentState:
          $ref: '#/components/schemas/OASysAssessmentState'
        dateStarted:
          type: string
          format: date-time
        dateCompleted:
          type: string
          format: date-time
        rosh:
          type: array
          items:
            $ref: '#/components/schemas/OASysQuestion'
      required:
        - assessmentId
        - assessmentState
        - dateStarted
        - rosh
    OASysSection:
      type: object
      properties:
        section:
          type: integer
          example: 10
        name:
          type: string
          example: Emotional wellbeing
        linkedToHarm:
          type: boolean
        linkedToReOffending:
          type: boolean
      required:
        - section
        - name
    OASysAssessmentState:
      type: string
      enum:
        - Completed
        - Incomplete
    ActiveOffence:
      type: object
      properties:
        deliusEventNumber:
          type: string
          example: "7"
        offenceDescription:
          type: string
        offenceId:
          type: string
          example: "M1502750438"
        convictionId:
          type: integer
          format: int64
          example: 1502724704
        offenceDate:
          type: string
          format: date
      required:
        - deliusEventNumber
        - offenceDescription
        - offenceId
        - convictionId
    DocumentLevel:
      type: string
      description: The level at which a Document is associated - i.e. to the Offender or to a specific Conviction
      enum:
        - Offender
        - Conviction
    Document:
      type: object
      description: Meta Info about a file relating to an Offender
      properties:
        id:
          type: string
        level:
          $ref: '#/components/schemas/DocumentLevel'
        fileName:
          type: string
        createdAt:
          type: string
          format: date-time
        typeCode:
          type: string
        typeDescription:
          type: string
        description:
          type: string
      required:
        - id
        - level
        - fileName
        - createdAt
        - typeCode
        - typeDescription
    PersonalTimeline:
      type: object
      properties:
        person:
          $ref: '#/components/schemas/Person'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationTimeline'
      required:
        - person
        - applications
    ApplicationTimeline:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        isOfflineApplication:
          type: boolean
        status:
          $ref: '#/components/schemas/ApprovedPremisesApplicationStatus'
        createdBy:
          $ref: '#/components/schemas/User'
        timelineEvents:
          type: array
          items:
            $ref: '#/components/schemas/TimelineEvent'
      required:
        - id
        - createdAt
        - isOfflineApplication
        - timelineEvents
    TimelineEvent:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TimelineEventType'
        id:
          type: string
        occurredAt:
          type: string
          format: date-time
        content:
          type: string
        createdBy:
          $ref: '#/components/schemas/User'
        associatedUrls:
          type: array
          items:
            $ref: '#/components/schemas/TimelineEventAssociatedUrl'
        triggerSource:
          type: string
          $ref: '#/components/schemas/TriggerSourceType'
    TimelineEventAssociatedUrl:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TimelineEventUrlType'
        url:
          type: string
      required:
        - type
        - url
    TimelineEventType:
      type: string
      enum:
        - approved_premises_application_submitted
        - approved_premises_application_assessed
        - approved_premises_booking_made
        - approved_premises_person_arrived
        - approved_premises_person_not_arrived
        - approved_premises_person_departed
        - approved_premises_booking_not_made
        - approved_premises_booking_cancelled
        - approved_premises_booking_changed
        - approved_premises_booking_keyworker_assigned
        - approved_premises_application_withdrawn
        - approved_premises_application_expired
        - approved_premises_information_request
        - approved_premises_assessment_appealed
        - approved_premises_assessment_allocated
        - approved_premises_placement_application_withdrawn
        - approved_premises_placement_application_allocated
        - approved_premises_match_request_withdrawn
        - approved_premises_request_for_placement_created
        - approved_premises_request_for_placement_assessed
        - cas3_person_arrived
        - cas3_person_departed
        - application_timeline_note
        - cas2_application_submitted
        - cas2_note
        - cas2_status_update
    TriggerSourceType:
      type: string
      enum:
        - user
        - system
    TimelineEventUrlType:
      type: string
      enum:
        - application
        - booking
        - assessment
        - assessmentAppeal
        - cas1SpaceBooking
    Cas2TimelineEvent:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TimelineEventType'
        occurredAt:
          type: string
          format: date-time
        label:
          type: string
        body:
          type: string
        createdByName:
          type: string
      required:
        - type
        - occurredAt
        - label
        - createdByName
    SeedRequest:
      type: object
      properties:
        seedType:
          $ref: '#/components/schemas/SeedFileType'
        fileName:
          type: string
      required:
        - seedType
        - fileName
    SeedFromExcelFileRequest:
      type: object
      properties:
        seedType:
          $ref: '#/components/schemas/SeedFromExcelFileType'
        fileName:
          description: File within the pre-configured seed directory
          type: string
      required:
        - seedType
        - fileName
    SeedFromExcelDirectoryRequest:
      type: object
      properties:
        seedType:
          $ref: '#/components/schemas/SeedFromExcelFileType'
        directoryName:
          description: Directory within the pre-configured seed directory
          type: string
      required:
        - seedType
        - directoryName
    SeedFileType:
      type: string
      enum:
        - approved_premises
        - approved_premises_rooms
        - temporary_accommodation_premises
        - temporary_accommodation_bedspace
        - user
        - nomis_users
        - external_users
        - cas2_applications
        - temporary_accommodation_users
        - approved_premises_users
        - characteristics
        - update_noms_number
        - update_users_from_api
        - users_basic
        - approved_premises_cancel_bookings
        - approved_premises_assessment_more_info_bug_fix
        - approved_premises_redact_assessment_details
        - approved_premises_booking_to_space_booking
        - approved_premises_withdraw_placement_request
        - approved_premises_replay_domain_events
        - approved_premises_duplicate_application
        - approved_premises_update_event_number
        - approved_premises_link_booking_to_placement_request
        - approved_premises_out_of_service_beds
        - approved_premises_cru_management_areas
        - approved_premises_space_planning_dry_run
        - approved_premises_import_delius_referrals
        - approved_premises_update_space_booking
        - approved_premises_backfill_active_space_bookings_created_in_delius
        - approved_premises_create_test_applications
        - approved_premises_delete_application_timeline_notes
        - temporary_accommodation_referral_rejection
    SeedFromExcelFileType:
      type: string
      enum:
        - cas1_import_site_survey_rooms
        - cas1_import_site_survey_premises
      x-enum-varnames:
        - CAS1_IMPORT_SITE_SURVEY_ROOMS
        - CAS1_IMPORT_SITE_SURVEY_PREMISES
    MigrationJobRequest:
      type: object
      properties:
        jobType:
          $ref: '#/components/schemas/MigrationJobType'
      required:
        - jobType
    MigrationJobType:
      type: string
      enum:
        - update_all_users_from_community_api
        - update_sentence_type_and_situation
        - update_booking_status
        - update_task_due_dates
        - update_users_pdu_by_api
        - update_cas2_applications_with_assessments
        - update_cas2_status_updates_with_assessments
        - update_cas2_notes_with_assessments
        - update_cas1_fix_placement_app_links
        - update_cas1_notice_types
        - update_cas1_backfill_user_ap_area
        - update_cas3_application_offender_name
        - update_cas3_domain_event_type_for_person_departed_updated
        - update_cas1_applications_licence_expiry_date
        - update_cas1_backfill_offline_application_name
        - update_cas1_arson_suitable_to_arson_offences
        - update_cas1_backfill_arson_suitable
        - update_cas1_approved_premises_assessment_report_properties
    PlacementDates:
      type: object
      properties:
        expectedArrival:
          type: string
          format: date
        duration:
          type: integer
      required:
        - expectedArrival
        - duration
    PlacementRequirements:
      type: object
      properties:
        gender:
          $ref: '#/components/schemas/Gender'
        type:
          $ref: '#/components/schemas/ApType'
        location:
          type: string
          description: Postcode outcode
          example: B74
        radius:
          type: integer
        essentialCriteria:
          type: array
          items:
            $ref: '#/components/schemas/PlacementCriteria'
        desirableCriteria:
          type: array
          items:
            $ref: '#/components/schemas/PlacementCriteria'
      required:
        - gender
        - type
        - location
        - radius
        - essentialCriteria
        - desirableCriteria
    PlacementApplication:
      allOf:
        - $ref: '#/components/schemas/NewPlacementApplication'
        - type: object
          properties:
            id:
              type: string
              description: If type is 'Additional', provides the PlacementApplication ID. If type is 'Initial' this field provides a PlacementRequest ID.
              format: uuid
            createdByUserId:
              type: string
              format: uuid
            schemaVersion:
              type: string
              format: uuid
            outdatedSchema:
              type: boolean
            createdAt:
              type: string
              format: date-time
            submittedAt:
              type: string
              format: date-time
            assessmentId:
              type: string
              description: If type is 'Additional', provides the PlacementApplication ID. If type is 'Initial' this field shouldn't be used.
              format: uuid
            assessmentCompletedAt:
              type: string
              format: date-time
            applicationCompletedAt:
              type: string
              format: date-time
            data:
              $ref: '#/components/schemas/Unit'
            document:
              $ref: '#/components/schemas/Unit'
            canBeWithdrawn:
              type: boolean
            isWithdrawn:
              type: boolean
            withdrawalReason:
              $ref: '#/components/schemas/WithdrawPlacementRequestReason'
            type:
              $ref: '#/components/schemas/PlacementApplicationType'
            placementDates:
              type: array
              items:
                $ref: '#/components/schemas/PlacementDates'
          required:
            - id
            - createdByUserId
            - schemaVersion
            - outdatedScheme
            - createdAt
            - assessmentId
            - assessmentCompletedAt
            - applicationCompletedAt
            - canBeWithdrawn
            - isWithdrawn
            - type
            - placementDates
    NewPlacementApplication:
      type: object
      properties:
        applicationId:
          type: string
          format: uuid
      required:
        - applicationId
    UpdatePlacementApplication:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Unit'
      required:
        - data
    SubmitPlacementApplication:
      type: object
      properties:
        translatedDocument:
          $ref: '#/components/schemas/Unit'
        placementType:
          $ref: '#/components/schemas/PlacementType'
        placementDates:
          type: array
          items:
            $ref: '#/components/schemas/PlacementDates'
      required:
        - translatedDocument
        - placementType
        - placementDates
    PlacementApplicationDecisionEnvelope:
      type: object
      properties:
        decision:
          $ref: '#/components/schemas/PlacementApplicationDecision'
        summaryOfChanges:
          type: string
        decisionSummary:
          type: string
      required:
        - decision
        - summaryOfChanges
        - decisionSummary
    PlacementApplicationDecision:
      type: string
      enum:
        - accepted
        - rejected
        - withdraw
        - withdrawn_by_pp
    PlacementType:
      type: string
      enum:
        - rotl
        - release_following_decision
        - additional_placement
    WithdrawPlacementApplication:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/WithdrawPlacementRequestReason'
      required:
        - reason
    RequestForPlacement:
      type: object
      properties:
        id:
          type: string
          description: |
            If `type` is `"manual"`, provides the `PlacementApplication` ID.
            If `type` is `"automatic"` this field provides a `PlacementRequest` ID.
          format: uuid
        createdByUserId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        submittedAt:
          type: string
          format: date-time
        requestReviewedAt:
          type: string
          description: |
            If `type` is `"manual"`, provides the value of `PlacementApplication.decisionMadeAt`.
            If `type` is `"automatic"` this field provides the value of `PlacementRequest.assessmentCompletedAt`.
          format: date-time
        document:
          $ref: '#/components/schemas/Unit'
        canBeDirectlyWithdrawn:
          description: |
            If true, the user making this request can withdraw this request for placement. 
            If false, it may still be possible to indirectly withdraw this request for placement by withdrawing the application.
          type: boolean
        isWithdrawn:
          type: boolean
        withdrawalReason:
          $ref: '#/components/schemas/WithdrawPlacementRequestReason'
        type:
          $ref: '#/components/schemas/RequestForPlacementType'
        placementDates:
          type: array
          items:
            $ref: '#/components/schemas/PlacementDates'
        status:
          $ref: '#/components/schemas/RequestForPlacementStatus'
      required:
        - id
        - createdByUserId
        - createdAt
        - canBeDirectlyWithdrawn
        - isWithdrawn
        - type
        - placementDates
        - status
    RequestForPlacementType:
      type: string
      enum:
        - manual
        - automatic
    RequestForPlacementStatus:
      type: string
      enum:
        - request_unsubmitted
        - request_rejected
        - request_submitted
        - awaiting_match
        - request_withdrawn
        - placement_booked
        - person_arrived
        - person_not_arrived
        - person_departed
    PlacementRequest:
      description: This type is to broad for use in search results, and as such we're moving towards using Cas1PlacementRequestSummary instead for that purpose.
      allOf:
        - $ref: '#/components/schemas/PlacementRequirements'
        - $ref: '#/components/schemas/PlacementDates'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            person:
              $ref: '#/components/schemas/Person'
            risks:
              $ref: '#/components/schemas/PersonRisks'
            applicationId:
              type: string
              format: uuid
            assessmentId:
              type: string
              format: uuid
            releaseType:
              $ref: '#/components/schemas/ReleaseTypeOption'
            status:
              $ref: '#/components/schemas/PlacementRequestStatus'
            assessmentDecision:
              $ref: '#/components/schemas/AssessmentDecision'
            assessmentDate:
              type: string
              format: date-time
            applicationDate:
              type: string
              format: date-time
            assessor:
              $ref: '#/components/schemas/ApprovedPremisesUser'
            isParole:
              type: boolean
            notes:
              description: Notes from the assessor for the CRU Manager
              type: string
            booking:
              description: Information about the legacy booking or space booking associated with the placement request
              $ref: '#/components/schemas/PlacementRequestBookingSummary'
            requestType:
              $ref: '#/components/schemas/PlacementRequestRequestType'
            isWithdrawn:
              type: boolean
            withdrawalReason:
              $ref: '#/components/schemas/WithdrawPlacementRequestReason'
          required:
            - person
            - risks
            - id
            - applicationId
            - assessmentId
            - releaseType
            - status
            - assessmentDecision
            - assessmentDate
            - applicationDate
            - assessor
            - isParole
            - isWithdrawn
    PlacementRequestRequestType:
      type: string
      enum:
        - parole
        - standardRelease
    PlacementRequestDetail:
      allOf:
        - $ref: '#/components/schemas/PlacementRequest'
        - type: object
          properties:
            cancellations:
              deprecated: true
              description: Not used by UI. Space Booking cancellations to be provided if cancellations are required in future.
              type: array
              items:
                $ref: '#/components/schemas/Cancellation'
            application:
              $ref: '#/components/schemas/Application'
            legacyBooking:
              description: The legacy booking associated with this placement request
              $ref: '#/components/schemas/PlacementRequestBookingSummary'
            spaceBookings:
              description: The space bookings associated with this placement request
              type: array
              items:
                $ref: '#/components/schemas/Cas1SpaceBookingSummary'
          required:
            - cancellations
            - application
            - spaceBookings
    PlacementRequestStatus:
      type: string
      enum:
        - notMatched
        - unableToMatch
        - matched
    PlacementCriteria:
      type: string
      enum:
        - isPIPE
        - isESAP
        - isMHAPStJosephs
        - isMHAPElliottHouse
        - isSemiSpecialistMentalHealth
        - isRecoveryFocussed
        - hasBrailleSignage
        - hasTactileFlooring
        - hasHearingLoop
        - isStepFreeDesignated
        - isArsonDesignated
        - isWheelchairDesignated
        - isSingle
        - isCatered
        - isSuitedForSexOffenders
        - isSuitableForVulnerable
        - acceptsSexOffenders
        - acceptsHateCrimeOffenders
        - acceptsChildSexOffenders
        - acceptsNonSexualChildOffenders
        - isArsonSuitable
        - isGroundFloor
        - hasEnSuite
        - arsonOffences
    Gender:
      type: string
      enum:
        - male
        - female
    ApType:
      type: string
      enum:
        - normal
        - pipe
        - esap
        - rfap
        - mhapStJosephs
        - mhapElliottHouse
    TemporaryAccommodationBedSearchParameters:
      type: object
      properties:
        serviceName:
          type: string
        startDate:
          type: string
          format: date
        durationDays:
          type: integer
          format: int64
          description: The number of days the Bed will need to be free from the start_date until
        probationDeliveryUnits:
          type: array
          description: The list of pdus Ids to search within
          items:
            type: string
            format: uuid
        premisesFilters:
          $ref: '#/components/schemas/PremisesFilters'
        bedspaceFilters:
          $ref: '#/components/schemas/BedspaceFilters'
        attributes:
          type: array
          description: Bedspace and property attributes to filter on
          items:
            $ref: "#/components/schemas/BedSearchAttributes"
      required:
        - probationDeliveryUnits
        - startDate
        - durationDays
    PremisesFilters:
      type: object
      properties:
        includedCharacteristicIds:
          type: array
          items:
            type: string
            format: uuid
        excludedCharacteristicIds:
          type: array
          items:
            type: string
            format: uuid
    BedspaceFilters:
      type: object
      properties:
        includedCharacteristicIds:
          type: array
          items:
            type: string
            format: uuid
        excludedCharacteristicIds:
          type: array
          items:
            type: string
            format: uuid
    BedSearchResults:
      type: object
      properties:
        resultsRoomCount:
          type: integer
          description: How many distinct Rooms the Beds in the results belong to
        resultsPremisesCount:
          type: integer
          description: How many distinct Premises the Beds in the results belong to
        resultsBedCount:
          type: integer
          description: How many Beds are in the results
        results:
          type: array
          items:
            $ref: '#/components/schemas/TemporaryAccommodationBedSearchResult'
      required:
        - resultsRoomCount
        - resultsPremisesCount
        - resultsBedCount
        - results
    TemporaryAccommodationBedSearchResult:
      type: object
      properties:
        premises:
          $ref: '#/components/schemas/BedSearchResultPremisesSummary'
        room:
          $ref: '#/components/schemas/BedSearchResultRoomSummary'
        bed:
          $ref: '#/components/schemas/BedSearchResultBedSummary'
        overlaps:
          type: array
          items:
            $ref: '#/components/schemas/TemporaryAccommodationBedSearchResultOverlap'
      required:
        - premises
        - room
        - bed
        - overlaps
    TemporaryAccommodationBedSearchResultOverlap:
      type: object
      properties:
        name:
          type: string
        crn:
          type: string
        sex:
          type: string
        personType:
          $ref: '#/components/schemas/PersonType'
        days:
          type: integer
        bookingId:
          type: string
          format: uuid
        roomId:
          type: string
          format: uuid
        assessmentId:
          type: string
          format: uuid
        isSexualRisk:
          type: boolean
      required:
        - name
        - crn
        - personType
        - days
        - bookingId
        - roomId
        - isSexualRisk
    BedSearchResultPremisesSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        town:
          type: string
        postcode:
          type: string
        probationDeliveryUnitName:
          type: string
        notes:
          type: string
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicPair'
        bedCount:
          type: integer
          description: the total number of Beds in the Premises
        bookedBedCount:
          type: integer
          description: the total number of booked Beds in the Premises
      required:
        - id
        - name
        - addressLine1
        - postcode
        - characteristics
        - bedCount
    BedSearchResultRoomSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicPair'
      required:
        - id
        - name
        - characteristics
    BedSearchResultBedSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    CharacteristicPair:
      type: object
      properties:
        propertyName:
          type: string
        name:
          type: string
      required:
        - name
    SortOrder:
      type: string
      enum:
        - ascending
        - descending
    BookingStatus:
      type: string
      enum:
        - arrived
        - awaiting-arrival
        - not-arrived
        - departed
        - cancelled
        - provisional
        - confirmed
        - closed
    BookingSearchSortField:
      type: string
      enum:
        - name
        - crn
        - startDate
        - endDate
        - createdAt
      x-enum-varnames:
        - personName
        - personCrn
        - bookingStartDate
        - bookingEndDate
        - bookingCreatedAt
    BookingSearchResults:
      type: object
      properties:
        resultsCount:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/BookingSearchResult"
      required:
        - resultsCount
        - results
    BookingSearchResult:
      type: object
      properties:
        person:
          $ref: "#/components/schemas/BookingSearchResultPersonSummary"
        booking:
          $ref: "#/components/schemas/BookingSearchResultBookingSummary"
        premises:
          $ref: "#/components/schemas/BookingSearchResultPremisesSummary"
        room:
          $ref: "#/components/schemas/BookingSearchResultRoomSummary"
        bed:
          $ref: "#/components/schemas/BookingSearchResultBedSummary"
      required:
        - person
        - booking
        - premises
        - room
        - bed
    BookingSearchResultPersonSummary:
      type: object
      properties:
        name:
          type: string
        crn:
          type: string
      required:
        - crn
    BookingSearchResultBookingSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        status:
          $ref: "#/components/schemas/BookingStatus"
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - status
        - startDate
        - endDate
        - createdAt
    BookingSearchResultPremisesSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        town:
          type: string
        postcode:
          type: string
      required:
        - id
        - name
        - addressLine1
        - postcode
    BookingSearchResultRoomSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    BookingSearchResultBedSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    NewPlacementRequestBookingConfirmation:
      type: object
      properties:
        premisesName:
          type: string
        arrivalDate:
          type: string
          format: date
          example: 2022-07-28
        departureDate:
          type: string
          format: date
          example: 2022-09-30
      required:
        - premisesName
        - arrivalDate
        - departureDate
    NewBedMove:
      type: object
      properties:
        bedId:
          type: string
          format: uuid
        notes:
          type: string
      required:
        - bedId
    NewBookingNotMade:
      type: object
      properties:
        notes:
          type: string
    BookingNotMade:
      type: object
      properties:
        id:
          type: string
          format: uuid
        placementRequestId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        notes:
          type: string
      required:
        - id
        - placementRequestId
        - createdAt
    ProbationDeliveryUnit:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    ReferralRejectionReason:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: There was not enough time to place them
        serviceScope:
          type: string
        isActive:
          type: boolean
      required:
        - id
        - name
        - serviceScope
        - isActive
    CacheType:
      type: string
      enum:
        - qCodeStaffMembers
        - userAccess
        - staffDetails
        - teamsManagingCase
        - ukBankHolidays
        - inmateDetails
    PersonType:
      type: string
      enum:
        - FullPerson
        - RestrictedPerson
        - UnknownPerson
    FullPersonSummary:
      allOf:
        - $ref: '#/components/schemas/PersonSummary'
        - type: object
          properties:
            name:
              type: string
            isRestricted:
              type: boolean
          required:
            - name
            - isRestricted
    RestrictedPersonSummary:
      allOf:
        - $ref: '#/components/schemas/PersonSummary'
    UnknownPersonSummary:
      allOf:
        - $ref: '#/components/schemas/PersonSummary'
    PersonSummaryDiscriminator:
      type: string
      enum:
        - FullPersonSummary
        - RestrictedPersonSummary
        - UnknownPersonSummary
    Withdrawables:
      type: object
      properties:
        notes:
          type: array
          items:
            type: string
        withdrawables:
          type: array
          items:
            $ref: '#/components/schemas/Withdrawable'
      required:
        - notes
        - withdrawables
    Withdrawable:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/WithdrawableType'
        dates:
          type: array
          items:
            $ref: '#/components/schemas/DatePeriod'
          description: 0, 1 or more dates can be specified depending upon the WithdrawableType
      required:
        - id
        - type
        - dates
    DatePeriod:
      type: object
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
      required:
        - startDate
        - endDate
    WithdrawableType:
      type: string
      enum:
        - application
        - booking
        - placement_application
        - placement_request
        - space_booking
    WithdrawalReason:
      type: string
      enum:
        - change_in_circumstances_new_application_to_be_submitted
        - error_in_application
        - duplicate_application
        - death
        - other_accommodation_identified
        - other
    PlacementRequestSortField:
      type: string
      enum:
        - duration
        - expected_arrival
        - created_at
        - application_date
        - request_type
        - person_name
        - person_risks_tier
      x-enum-varnames:
        - duration
        - expectedArrival
        - createdAt
        - applicationSubmittedAt
    UserSortField:
      type: string
      enum:
        - name
      x-enum-varnames:
        - personName
    SortDirection:
      type: string
      enum:
        - asc
        - desc
    AllocatedFilter:
      type: string
      enum:
        - allocated
        - unallocated
    ApplicationSortField:
      type: string
      enum:
        - tier
        - createdAt
        - arrivalDate
        - releaseType
    RiskTierLevel:
      type: string
      enum:
        - D0
        - D1
        - D2
        - D3
        - C0
        - C1
        - C2
        - C3
        - B0
        - B1
        - B2
        - B3
        - A0
        - A1
        - A2
        - A3
    NewAppeal:
      type: object
      properties:
        appealDate:
          type: string
          format: date
        appealDetail:
          type: string
        decision:
          $ref: '#/components/schemas/AppealDecision'
        decisionDetail:
          type: string
      required:
        - appealDate
        - appealDetail
        - decision
        - decisionDetail
    Appeal:
      type: object
      properties:
        id:
          type: string
          format: uuid
        appealDate:
          type: string
          format: date
        appealDetail:
          type: string
        decision:
          $ref: '#/components/schemas/AppealDecision'
        decisionDetail:
          type: string
        createdAt:
          type: string
          format: date-time
        applicationId:
          type: string
          format: uuid
        assessmentId:
          type: string
          format: uuid
        createdByUser:
          $ref: '#/components/schemas/User'
      required:
        - id
        - appealDate
        - appealDetail
        - decision
        - decisionDetail
        - createdAt
        - applicationId
        - createdByUser
    AppealDecision:
      type: string
      enum:
        - accepted
        - rejected
    Cas1ApplicationUserDetails:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        telephoneNumber:
          type: string
      required:
        - name
    Cas3ReportType:
      type: string
      enum:
        - referral
        - booking
        - bedUsage
        - bedOccupancy
        - futureBookings
        - futureBookingsCsv
        - bookingGap
    Cas2ReportName:
      type: string
      enum:
        - submitted-applications
        - application-status-updates
        - unsubmitted-applications
    NamedId:
      type: object
      description: A generic stub for an object with a name and an ID.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    Temporality:
      type: string
      enum:
        - past
        - current
        - future
    BedSearchAttributes:
      type: string
      enum:
        - isSharedProperty
        - isSingleOccupancy
        - isWheelchairAccessible
      x-enum-varnames:
        - SHARED_PROPERTY
        - SINGLE_OCCUPANCY
        - WHEELCHAIR_ACCESSIBLE
    Cas1SpaceCharacteristic:
      type: string
      description: All of the characteristics of both premises and rooms
      enum:
        - acceptsChildSexOffenders
        - acceptsHateCrimeOffenders
        - acceptsNonSexualChildOffenders
        - acceptsSexOffenders
        - additionalRestrictions
        - hasArsonInsuranceConditions
        - hasBrailleSignage
        - hasCallForAssistance
        - hasCrib7Bedding
        - hasEnSuite
        - hasFixedMobilityAids
        - hasHearingLoop
        - hasLift
        - hasNearbySprinkler
        - hasSmokeDetector
        - hasStepFreeAccess
        - hasStepFreeAccessToCommunalAreas
        - hasTactileFlooring
        - hasTurningSpace
        - hasWheelChairAccessibleBathrooms
        - hasWideAccessToCommunalAreas
        - hasWideDoor
        - hasWideStepFreeAccess
        - isArsonDesignated
        - isArsonSuitable
        - isCatered
        - isESAP
        - isFullyFm
        - isGroundFloor
        - isGroundFloorNrOffice
        - isIAP
        - isPIPE
        - isRecoveryFocussed
        - isSemiSpecialistMentalHealth
        - isSingle
        - isStepFreeDesignated
        - isSuitableForVulnerable
        - isSuitedForSexOffenders
        - isTopFloorVulnerable
        - isWheelchairAccessible
        - isWheelchairDesignated
        - arsonOffences
    Cas1SpaceBookingSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        person:
          $ref: "#/components/schemas/PersonSummary"
        canonicalArrivalDate:
          description: actual arrival date or, if not known, the expected arrival date
          type: string
          format: date
        canonicalDepartureDate:
          description: actual departure date or, if not known, the expected departure date
          type: string
          format: date
        expectedArrivalDate:
          description: expected arrival date
          type: string
          format: date
        actualArrivalDate:
          description: actual arrival date if known
          type: string
          format: date
        expectedDepartureDate:
          description: expected departure date
          type: string
          format: date
        actualDepartureDate:
          description: actual departure date if known
          type: string
          format: date
        isNonArrival:
          type: boolean
        tier:
          description: Risk rating tier level of corresponding application
          type: string
        keyWorkerAllocation:
          $ref: '#/components/schemas/Cas1KeyWorkerAllocation'
        status:
          $ref: '#/components/schemas/Cas1SpaceBookingSummaryStatus'
        characteristics:
          description: "Room and premise characteristics"
          type: array
          items:
            $ref: '#/components/schemas/Cas1SpaceCharacteristic'
          default: []
      required:
        - id
        - person
        - canonicalArrivalDate
        - canonicalDepartureDate
        - characteristics
        - expectedArrivalDate
        - expectedDepartureDate
    Cas1KeyWorkerAllocation:
      type: object
      properties:
        keyWorker:
          $ref: '#/components/schemas/StaffMember'
        allocatedAt:
          type: string
          format: date
      required:
        - keyWorker
    Cas1SpaceBookingSummaryStatus:
      deprecated: true
      type: string
      enum:
        - arrivingWithin6Weeks
        - arrivingWithin2Weeks
        - arrivingToday
        - overdueArrival
        - arrived
        - notArrived
        - departingWithin2Weeks
        - departingToday
        - overdueDeparture
        - departed
    Cas1PremisesBasicSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Hope House
        apCode:
          type: string
          example: NEHOPE1
        apArea:
          $ref: '#/components/schemas/NamedId'
        bedCount:
          type: integer
          example: 22
        supportsSpaceBookings:
          type: boolean
        fullAddress:
          description: Full address, excluding postcode
          type: string
        postcode:
          type: string
      required:
        - id
        - name
        - apArea
        - bedCount
        - supportsSpaceBookings
        - fullAddress
        - postcode
    Cas1PremisesSearchResultSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        apType:
          $ref: '#/components/schemas/ApType'
        name:
          type: string
          example: Hope House
        fullAddress:
          description: Full address, excluding postcode
          type: string
        addressLine1:
          description: Deprecated, use fullAddress
          deprecated: true
          type: string
          example: 1 The Street
        addressLine2:
          description: Deprecated, use fullAddress
          deprecated: true
          type: string
          example: Blackmore End
        town:
          description: Deprecated, use fullAddress
          deprecated: true
          type: string
          example: Braintree
        postcode:
          type: string
          example: LS1 3AD
        apArea:
          $ref: '#/components/schemas/NamedId'
        premisesCharacteristics:
          type: array
          deprecated: true
          description: "This is not populated. Instead, use 'characteristics'"
          items:
            $ref: '#/components/schemas/CharacteristicPair'
        characteristics:
          type: array
          description: "Room and premise characteristics"
          items:
            $ref: '#/components/schemas/Cas1SpaceCharacteristic'
      required:
        - id
        - apType
        - name
        - apArea
        - characteristics
        - fullAddress
    Cas1Premises:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Hope House
        apCode:
          type: string
          example: NEHOPE1
        fullAddress:
          description: Full address, excluding postcode
          type: string
        postcode:
          type: string
          example: LS1 3AD
        apArea:
          $ref: '#/components/schemas/ApArea'
        bedCount:
          type: integer
          description: The total number of beds in this premises
          example: 22
        availableBeds:
          type: integer
          description: The total number of beds available at this moment in time
          example: 20
        outOfServiceBeds:
          type: integer
          description: The total number of out of service beds at this moment in time
          example: 2
        supportsSpaceBookings:
          type: boolean
        managerDetails:
          type: string
        overbookingSummary:
          description: over-bookings for the next 12 weeks
          type: array
          items:
            $ref: '#/components/schemas/Cas1OverbookingRange'
      required:
        - id
        - name
        - apCode
        - fullAddress
        - postcode
        - apArea
        - bedCount
        - availableBeds
        - outOfServiceBeds
        - supportsSpaceBookings
        - overbookingSummary
    Cas1OverbookingRange:
      type: object
      properties:
        startInclusive:
          type: string
          format: date
          example: 2022-07-28
        endInclusive:
          description: This can be the same as the start date if overbooked for one night
          type: string
          format: date
          example: 2022-07-29
      required:
        - startInclusive
        - endInclusive
    Cas1SpaceBookingCharacteristic:
      type: string
      description: All of the characteristics applicable to a space booking
      enum:
        - hasEnSuite
        - isArsonSuitable
        - isSingle
        - isStepFreeDesignated
        - isSuitedForSexOffenders
        - isWheelchairDesignated
      x-enum-varnames:
        - HAS_EN_SUITE
        - IS_ARSON_SUITABLE
        - IS_SINGLE
        - IS_STEP_FREE_DESIGNATED
        - IS_SUITED_FOR_SEX_OFFENDERS
        - IS_WHEELCHAIR_DESIGNATED
    Cas1NewSpaceBooking:
      type: object
      properties:
        arrivalDate:
          type: string
          format: date
          example: 2022-07-28
        departureDate:
          type: string
          format: date
          example: 2022-09-30
        premisesId:
          type: string
          format: uuid
          example: 290fa58c-77b2-47e2-b729-4cd6b2ed1a78
        requirements:
          $ref: '#/components/schemas/Cas1SpaceBookingRequirements'
      required:
        - arrivalDate
        - departureDate
        - premisesId
        - requirements
    Cas1SpaceBookingRequirements:
      type: object
      properties:
        essentialCharacteristics:
          type: array
          items:
            $ref: '#/components/schemas/Cas1SpaceCharacteristic'
      required:
        - essentialCharacteristics
    Cas1UpdateSpaceBooking:
      type: object
      description: Only provide values when a change is required
      properties:
        arrivalDate:
          type: string
          format: date
          example: 2022-07-28
        departureDate:
          type: string
          format: date
          example: 2022-09-30
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/Cas1SpaceBookingCharacteristic'
    Cas1SpaceSearchRequirements:
      type: object
      properties:
        apTypes:
          deprecated: true
          description: "Use 'spaceCharacteristics' to filter on premise types"
          type: array
          items:
            $ref: '#/components/schemas/ApType'
        apType:
          deprecated: true
          description: "Use 'spaceCharacteristics' to filter on premise types"
          $ref: '#/components/schemas/ApType'
        spaceCharacteristics:
          type: array
          items:
            $ref: '#/components/schemas/Cas1SpaceCharacteristic'
        genders:
          description: gender is obtained from application's associated gender
          deprecated: true
          type: array
          items:
            $ref: '#/components/schemas/Gender'
      required:
        - gender
    Cas1SpaceSearchParameters:
      type: object
      properties:
        applicationId:
          type: string
          format: uuid
          description: The id of the application the space search is for
        startDate:
          type: string
          format: date
          description: The date the space is required from
        durationInDays:
          type: integer
          example: 84
          description: The number of days the space is needed, from the start date
        targetPostcodeDistrict:
          type: string
          description: The 'target' location, in the form of a postcode district
          example: SE5
        requirements:
          $ref: '#/components/schemas/Cas1SpaceSearchRequirements'
      required:
        - applicationId
        - startDate
        - durationInDays
        - targetPostcodeDistrict
        - requirements
    Cas1SpaceSearchResults:
      type: object
      properties:
        searchCriteria:
          $ref: '#/components/schemas/Cas1SpaceSearchParameters'
        resultsCount:
          type: integer
          example: 4
        results:
          type: array
          items:
            $ref: '#/components/schemas/Cas1SpaceSearchResult'
      required:
        - resultsCount
        - results
    Cas1SpaceSearchResult:
      type: object
      properties:
        premises:
          $ref: '#/components/schemas/Cas1PremisesSearchResultSummary'
        distanceInMiles:
          type: number
          example: 2.1
        spacesAvailable:
          type: array
          deprecated: true
          description: "This is not populated and will be removed in the future"
          items:
            $ref: '#/components/schemas/Cas1SpaceAvailability'
      required:
        - premises
        - distanceInMiles
    Cas1SpaceAvailability:
      type: object
      deprecated: true
      properties:
        spaceCharacteristics:
          type: array
          items:
            $ref: '#/components/schemas/Cas1SpaceCharacteristic'
        durationInDays:
          type: integer
          example: 77
    Cas1SpaceCategory:
      type: string
      example: arson
      description: Spaces are categorised by these traits - 'standard' plus selected physcial and risk characteristics
      enum:
        - standard
        - arson
        - wheelchair
        - sexOffender
        - enSuite
        - single
    Cas1SpaceBooking:
      type: object
      properties:
        id:
          type: string
          format: uuid
        applicationId:
          type: string
          format: uuid
        assessmentId:
          type: string
          format: uuid
        person:
          $ref: '#/components/schemas/Person'
        tier:
          type: string
        requirements:
          deprecated: true
          description: Use 'characteristics' instead
          $ref: '#/components/schemas/Cas1SpaceBookingRequirements'
        premises:
          $ref: '#/components/schemas/NamedId'
        apArea:
          $ref: '#/components/schemas/NamedId'
        bookedBy:
          $ref: '#/components/schemas/User'
        requestForPlacementId:
          deprecated: true
          description: use the better named 'placementRequestId'
          type: string
          format: uuid
        placementRequestId:
          type: string
          format: uuid
        expectedArrivalDate:
          type: string
          format: date
        expectedDepartureDate:
          type: string
          format: date
        actualArrivalDate:
          description: Use actualArrivalDateOnly and actualArrivalTime
          deprecated: true
          type: string
          format: date-time
        actualArrivalDateOnly:
          type: string
          format: date
        actualArrivalTime:
          description: This value may not be defined even if an arrival date is
          type: string
          pattern: '^([01][0-9]|2[0-3]):([0-5][0-9])$'
          example: '23:15'
        actualDepartureDate:
          description: Use actualDepartureDateOnly and actualDepartureTime
          deprecated: true
          type: string
          format: date-time
        actualDepartureDateOnly:
          type: string
          format: date
        actualDepartureTime:
          description: This value may not be defined even if a departure date is
          type: string
          pattern: '^([01][0-9]|2[0-3]):([0-5][0-9])$'
          example: '23:15'
        canonicalArrivalDate:
          description: actual arrival date or, if not known, the expected arrival date
          type: string
          format: date
        canonicalDepartureDate:
          description: actual departure date or, if not known, the expected departure date
          type: string
          format: date
        departure:
          $ref: '#/components/schemas/Cas1SpaceBookingDeparture'
        createdAt:
          type: string
          format: date-time
        keyWorkerAllocation:
          $ref: '#/components/schemas/Cas1KeyWorkerAllocation'
        otherBookingsInPremisesForCrn:
          type: array
          items:
            $ref: '#/components/schemas/Cas1SpaceBookingDates'
        cancellation:
          $ref: '#/components/schemas/Cas1SpaceBookingCancellation'
        nonArrival:
          $ref: '#/components/schemas/Cas1SpaceBookingNonArrival'
        deliusEventNumber:
          type: string
        status:
          $ref: '#/components/schemas/Cas1SpaceBookingSummaryStatus'
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/Cas1SpaceCharacteristic'
      required:
        - id
        - applicationId
        - person
        - requirements
        - premises
        - apArea
        - expectedArrivalDate
        - expectedDepartureDate
        - canonicalArrivalDate
        - canonicalDepartureDate
        - createdAt
        - otherBookingsInPremisesForCrn
        - characteristics
    Cas1SpaceBookingDates:
      type: object
      properties:
        id:
          type: string
          format: uuid
        canonicalArrivalDate:
          description: actual arrival date or, if not known, the expected arrival date
          type: string
          format: date
        canonicalDepartureDate:
          description: actual departure date or, if not known, the expected departure date
          type: string
          format: date
      required:
        - id
        - canonicalArrivalDate
        - canonicalDepartureDate
    Cas1SpaceBookingSummarySortField:
      type: string
      enum:
        - personName
        - canonicalArrivalDate
        - canonicalDepartureDate
        - keyWorkerName
        - tier
    Cas1SpaceBookingDaySummarySortField:
      type: string
      enum:
        - personName
        - tier
        - canonicalArrivalDate
        - canonicalDepartureDate
        - releaseType
      x-enum-varnames:
        - PERSON_NAME
        - TIER
        - CANONICAL_ARRIVAL_DATE
        - CANONICAL_DEPARTURE_DATE
        - RELEASE_TYPE
        - SPACE_TYPE
    Cas1PremisesDaySummary:
      type: object
      properties:
        forDate:
          type: string
          format: date
        previousDate:
          type: string
          format: date
        nextDate:
          type: string
          format: date
        capacity:
          $ref: '#/components/schemas/Cas1PremiseCapacityForDay'
        spaceBookings:
          type: array
          items:
            $ref: '#/components/schemas/Cas1SpaceBookingDaySummary'
        outOfServiceBeds:
          type: array
          items:
            $ref: '#/components/schemas/Cas1OutOfServiceBedSummary'
      required:
        - forDate
        - previousDate
        - nextDate
        - capacity
        - spaceBookings
        - outOfServiceBeds
    Cas1SpaceBookingDaySummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        person:
          $ref: "#/components/schemas/PersonSummary"
        canonicalArrivalDate:
          description: actual arrival date or, if not known, the expected arrival date
          type: string
          format: date
        canonicalDepartureDate:
          description: actual departure date or, if not known, the expected departure date
          type: string
          format: date
        tier:
          description: Risk rating tier level of corresponding application
          type: string
        releaseType:
          type: string
        essentialCharacteristics:
          type: array
          items:
            $ref: '#/components/schemas/Cas1SpaceCharacteristic'
      required:
        - id
        - person
        - canonicalArrivalDate
        - canonicalDepartureDate
        - spaceType
        - essentialCharacteristics
    Cas1SpaceBookingResidency:
      type: string
      enum:
        - upcoming
        - current
        - historic
    Cas1SpaceBookingDeparture:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/NamedId'
        parentReason:
          $ref: '#/components/schemas/NamedId'
        moveOnCategory:
          $ref: '#/components/schemas/NamedId'
        notes:
          type: string
      required:
        - reason
    Cas1SpaceBookingCancellation:
      type: object
      properties:
        occurredAt:
          type: string
          format: date
        recordedAt:
          type: string
          format: date-time
        reason:
          $ref: '#/components/schemas/CancellationReason'
        reason_notes:
          type: string
      required:
        - occurredAt
        - recordedAt
        - reason
    Cas1SpaceBookingNonArrival:
      type: object
      properties:
        confirmedAt:
          type: string
          format: date-time
        reason:
          $ref: '#/components/schemas/NamedId'
        notes:
          type: string
    Cas1NewArrival:
      type: object
      properties:
        arrivalDateTime:
          description: This is deprecated. Instead use arrivalDate and arrivalTime
          deprecated: true
          type: string
          format: date-time
        arrivalDate:
          type: string
          format: date
        arrivalTime:
          type: string
          pattern: '^([01][0-9]|2[0-3]):([0-5][0-9])$'
          example: '23:15'
    Cas1NonArrival:
      type: object
      properties:
        reason:
          type: string
          format: uuid
        notes:
          type: string
      required:
        - reason
    Cas1NewDeparture:
      type: object
      properties:
        departureDateTime:
          type: string
          format: date-time
        departureDate:
          type: string
          format: date
        departureTime:
          type: string
          pattern: '^([01][0-9]|2[0-3]):([0-5][0-9])$'
          example: '23:15'
        reasonId:
          type: string
          format: uuid
        moveOnCategoryId:
          type: string
          format: uuid
        notes:
          type: string
      required:
        - reasonId
    Cas1AssignKeyWorker:
      type: object
      properties:
        staffCode:
          type: string
      required:
        - staffCode
    Cas1ApprovedPremisesGender:
      type: string
      enum:
        - man
        - woman
    Cas1UpdateUser:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/ApprovedPremisesUserRole'
        qualifications:
          type: array
          items:
            $ref: '#/components/schemas/UserQualification'
        cruManagementAreaOverrideId:
          type: string
          format: uuid
      required:
        - roles
        - qualifications
    Cas1NewSpaceBookingCancellation:
      type: object
      properties:
        occurredAt:
          type: string
          format: date
        reasonId:
          type: string
          format: uuid
        reasonNotes:
          type: string
      required:
        - occurredAt
        - reasonId
    Cas1PremiseCapacity:
      type: object
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        capacity:
          description: Capacity for each day, returning chronologically (oldest first)
          type: array
          items:
            $ref: '#/components/schemas/Cas1PremiseCapacityForDay'
      required:
        - startDate
        - endDate
        - capacity
    Cas1PremiseCapacityForDay:
      type: object
      properties:
        date:
          type: string
          format: date
        totalBedCount:
          description: total bed count including temporarily unavailable beds (e.g. out of service beds). this does not consider bookings.
          type: integer
        availableBedCount:
          description: total bed count excluding temporarily unavailable beds (e.g. out of service beds). this does not consider bookings.
          type: integer
        bookingCount:
          description: total number of bookings in the premise on that day
          type: integer
        characteristicAvailability:
          type: array
          items:
            $ref: '#/components/schemas/Cas1PremiseCharacteristicAvailability'
      required:
        - date
        - totalBedCount
        - availableBedCount
        - bookingCount
        - characteristicAvailability
    Cas1PremiseCharacteristicAvailability:
      type: object
      properties:
        characteristic:
          $ref: '#/components/schemas/Cas1SpaceBookingCharacteristic'
        availableBedsCount:
          description: the number of available beds with this characteristic
          type: integer
        bookingsCount:
          description: the number of bookings requiring this characteristic
          type: integer
      required:
        - characteristic
        - availableBedsCount
        - bookingsCount
    Cas1ReportName:
      type: string
      enum:
        - applications
        - applicationsV2
        - applicationsV2WithPii
        - dailyMetrics
        - lostBeds
        - outOfServiceBeds
        - placementApplications
        - placementMatchingOutcomes
        - placementMatchingOutcomesV2
        - placementMatchingOutcomesV2WithPii
        - requestsForPlacement
        - requestsForPlacementWithPii
    Cas1OutOfServiceBedSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        bedId:
          type: string
          format: uuid
        roomName:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        reason:
          $ref: '#/components/schemas/Cas1OutOfServiceBedReason'
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/Cas1SpaceCharacteristic'
      required:
        - id
        - bedId
        - startDate
        - endDate
        - reason
        - characteristics
    Cas1OutOfServiceBed:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        bed:
          $ref: '#/components/schemas/NamedId'
        room:
          $ref: '#/components/schemas/NamedId'
        premises:
          $ref: '#/components/schemas/NamedId'
        apArea:
          $ref: '#/components/schemas/NamedId'
        reason:
          $ref: '#/components/schemas/Cas1OutOfServiceBedReason'
        referenceNumber:
          type: string
        notes:
          type: string
        daysLostCount:
          type: integer
        temporality:
          $ref: '#/components/schemas/Temporality'
        status:
          $ref: '#/components/schemas/Cas1OutOfServiceBedStatus'
        cancellation:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Cas1OutOfServiceBedCancellation'
        revisionHistory:
          type: array
          items:
            $ref: '#/components/schemas/Cas1OutOfServiceBedRevision'
      required:
        - id
        - createdAt
        - startDate
        - endDate
        - bed
        - room
        - premises
        - apArea
        - reason
        - daysLostCount
        - temporality
        - status
        - revisionHistory
    Cas1NewOutOfServiceBed:
      type: object
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        reason:
          type: string
          format: uuid
        referenceNumber:
          type: string
        notes:
          type: string
        bedId:
          type: string
          format: uuid
      required:
        - startDate
        - endDate
        - reason
        - bedId
    UpdateCas1OutOfServiceBed:
      type: object
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        reason:
          type: string
          format: uuid
        referenceNumber:
          type: string
        notes:
          type: string
      required:
        - startDate
        - endDate
        - reason
    Cas1OutOfServiceBedCancellation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        notes:
          type: string
      required:
        - id
        - createdAt
    Cas1NewOutOfServiceBedCancellation:
      type: object
      properties:
        notes:
          type: string
    Cas1OutOfServiceBedStatus:
      type: string
      enum:
        - active
        - cancelled
    Cas1OutOfServiceBedReason:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Double Room with Single Occupancy - Other (Non-FM)
        isActive:
          type: boolean
      required:
        - id
        - name
        - isActive
    Cas1OutOfServiceBedSortField:
      type: string
      enum:
        - premisesName
        - roomName
        - bedName
        - startDate
        - endDate
        - reason
        - daysLost
    Cas1OutOfServiceBedRevision:
      type: object
      properties:
        id:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/User'
        revisionType:
          type: array
          items:
            $ref: '#/components/schemas/Cas1OutOfServiceBedRevisionType'
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        reason:
          $ref: '#/components/schemas/Cas1OutOfServiceBedReason'
        referenceNumber:
          type: string
        notes:
          type: string
      required:
        - id
        - updatedAt
        - revisionType
    Cas1OutOfServiceBedRevisionType:
      type: string
      enum:
        - created
        - updatedStartDate
        - updatedEndDate
        - updatedReferenceNumber
        - updatedReason
        - updatedNotes
    Cas1TimelineEvent:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Cas1TimelineEventType'
        id:
          type: string
        occurredAt:
          type: string
          format: date-time
        content:
          type: string
        createdBy:
          $ref: '#/components/schemas/User'
        payload:
          $ref: '#/components/schemas/Cas1TimelineEventContentPayload'
        associatedUrls:
          type: array
          items:
            $ref: '#/components/schemas/Cas1TimelineEventAssociatedUrl'
        triggerSource:
          type: string
          $ref: '#/components/schemas/Cas1TriggerSourceType'
      required:
        - type
        - id
        - occurredAt
    Cas1TimelineEventAssociatedUrl:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Cas1TimelineEventUrlType'
        url:
          type: string
      required:
        - type
        - url
    Cas1TimelineEventType:
      type: string
      enum:
        - application_submitted
        - application_assessed
        - booking_made
        - person_arrived
        - person_not_arrived
        - person_departed
        - booking_not_made
        - booking_cancelled
        - booking_changed
        - booking_keyworker_assigned
        - application_withdrawn
        - application_expired
        - information_request
        - assessment_appealed
        - assessment_allocated
        - placement_application_withdrawn
        - placement_application_allocated
        - match_request_withdrawn
        - request_for_placement_created
        - request_for_placement_assessed
        - application_timeline_note
    Cas1TriggerSourceType:
      type: string
      enum:
        - user
        - system
    Cas1TimelineEventUrlType:
      type: string
      enum:
        - application
        - booking
        - assessment
        - assessmentAppeal
        - spaceBooking
    Cas1PersonalTimeline:
      type: object
      properties:
        person:
          $ref: '#/components/schemas/Person'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Cas1ApplicationTimeline'
      required:
        - person
        - applications
    Cas1ApplicationTimeline:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        isOfflineApplication:
          type: boolean
        status:
          $ref: '#/components/schemas/Cas1ApplicationStatus'
        createdBy:
          $ref: '#/components/schemas/User'
        timelineEvents:
          type: array
          items:
            $ref: '#/components/schemas/Cas1TimelineEvent'
      required:
        - id
        - createdAt
        - isOfflineApplication
        - timelineEvents
    Cas1ApplicationStatus:
      type: string
      enum:
        - started
        - submitted
        - rejected
        - awaitingAssesment
        - unallocatedAssesment
        - assesmentInProgress
        - awaitingPlacement
        - placementAllocated
        - inapplicable
        - withdrawn
        - requestedFurtherInformation
        - pendingPlacementRequest
        - expired
    Cas1TimelineEventContentPayload:
      type: object
      description: "Base schema for all timeline event payloads"
      properties:
        type:
          $ref: '#/components/schemas/Cas1TimelineEventType'
        premises:
          $ref: '#/components/schemas/NamedId'
        schemaVersion:
          type: integer
      required:
        - type
        - premises
        - schemaVersion
      discriminator:
        propertyName: "type"
        mapping:
          booking_changed: '#/components/schemas/Cas1BookingChangedContentPayload'
    Cas1BookingChangedContentPayload:
      type: object
      allOf:
        - $ref: "#/components/schemas/Cas1TimelineEventContentPayload"
      properties:
        expectedArrival:
          type: string
          format: date
        expectedDeparture:
          type: string
          format: date
        previousExpectedArrival:
          description: "Only populated if the new value is different, and where schema version = 2"
          type: string
          format: date
        previousExpectedDeparture:
          description: "Only populated if the new value is different, and where schema version = 2"
          type: string
          format: date
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/Cas1SpaceCharacteristic'
        previousCharacteristics:
          description: "Only populated if the new value is different, and where schema version = 2"
          type: array
          items:
            $ref: '#/components/schemas/Cas1SpaceCharacteristic'
      required:
        - expectedArrival
        - expectedDeparture
    Cas1PlacementRequestSummary:
      type: object
      properties:
        requestedPlacementDuration:
          type: integer
        requestedPlacementArrivalDate:
          type: string
          format: date
        id:
          type: string
          format: uuid
        person:
          $ref: '#/components/schemas/Person'
        personTier:
          type: string
        applicationId:
          type: string
          format: uuid
        placementRequestStatus:
          type: string
          enum:
            - matched
            - unableToMatch
            - notMatched
        applicationSubmittedDate:
          type: string
          format: date
        isParole:
          type: boolean
        firstBookingPremisesName:
          type: string
        firstBookingArrivalDate:
          type: string
          format: date
      required:
        - placementDatesDuration
        - placementDatesExpectedArrivalDate
        - placementRequestStatus
        - person
        - isParole
        - id
    Cas1NewChangeRequest:
      type: object
      properties:
        space_booking_id:
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/Cas1ChangeRequestType'
        requester_notes:
          type: string
      required:
        - space_booking_id
        - type
        - requester_notes
    Cas1ChangeRequestStatus:
      type: string
      enum:
        - resolved
        - unresolved
      x-enum-varnames:
        - RESOLVED
        - UNRESOLVED
    Cas1ChangeRequestType:
      type: string
      enum:
        - appeal
        - extension
        - plannedTransfer
      x-enum-varnames:
        - APPEAL
        - EXTENSION
        - PLANNED_TRANSFER
    Cas1ChangeRequestSummary:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Cas1ChangeRequestType'
        created_at:
          type: string
          format: date-time
        resolution:
          type: string
          enum:
            - approved
            - rejected
          x-enum-varnames:
            - APPROVED
            - REJECTED
        resolved_at:
          type: string
          format: date-time
        crn:
          type: string
      required:
        - type
        - created_at
        - crn
    Cas1ChangeRequestSortField:
      type: string
      enum:
        - created_at
        - type
      x-enum-varnames:
        - CREATED_AT
        - TYPE
    Cas1PremisesBedSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        roomName:
          type: string
        bedName:
          type: string
      required:
        - id
        - roomName
        - bedName
