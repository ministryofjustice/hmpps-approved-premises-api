name: Test

on:
  pull_request:
    branches:
      - main
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  cas1_e2e_test:
    name: "CAS1 E2E"
#    needs:
#      - deploy_dev
    uses: ministryofjustice/hmpps-approved-premises-ui/.github/workflows/e2e_tests.yml@main
    secrets: inherit

  cas2_e2e_test:
    name: "CAS2 E2E"
#    needs:
#      - deploy_dev
    uses: ministryofjustice/hmpps-community-accommodation-tier-2-ui/.github/workflows/e2e_tests.yml@main
    secrets: inherit

  cas2_bail_e2e_test:
    name: "CAS2 Bail E2E"
#    needs:
#      - deploy_dev
    uses: ministryofjustice/hmpps-community-accommodation-tier-2-bail-ui/.github/workflows/e2e_tests.yml@main
    secrets: inherit

  cas3_e2e_test:
    name: "CAS3 E2E"
#    needs:
#      - deploy_dev
    uses: ministryofjustice/hmpps-temporary-accommodation-ui/.github/workflows/e2e_tests.yml@main
    secrets: inherit

#  gradle_build:
#    name: Gradle Build
#    runs-on: ubuntu-latest
#    env:
#      _JAVA_OPTIONS: "-Xmx3g"
#      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: 21
#      - name: Set up Gradle
#        uses: gradle/actions/setup-gradle@v4
#      - name: Gradle Build
#        run: ./gradlew assemble testClasses --build-cache
#
#  helm-lint:
#    name: Helm lint
#    strategy:
#      matrix:
#        environments: ['development', 'test', 'preprod', 'prod']
#    uses: ministryofjustice/hmpps-github-actions/.github/workflows/test_helm_lint.yml@v2 # WORKFLOW VERSION
#    secrets: inherit
#    with:
#      environment: ${{ matrix.environments }}
#
#  ktlint-check:
#    name: KtLintCheck
#    runs-on: ubuntu-latest
#    needs: gradle_build
#    env:
#      _JAVA_OPTIONS: "-Xmx3g"
#      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: 21
#      - name: Set up Gradle
#        uses: gradle/actions/setup-gradle@v4
#      - name: Run ktlintCheck
#        run: ./gradlew ktlintCheck
#
#  detekt:
#    name: detekt
#    runs-on: ubuntu-latest
#    needs: gradle_build
#    env:
#      _JAVA_OPTIONS: "-Xmx3g"
#      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: 21
#      - name: Set up Gradle
#        uses: gradle/actions/setup-gradle@v4
#      - name: Run detekt
#        run: ./gradlew detekt
#
#  unit_test:
#    name: Unit tests
#    runs-on: ubuntu-latest
#    needs: gradle_build
#    env:
#      _JAVA_OPTIONS: "-Xmx3g"
#      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: 21
#      - name: Set up Gradle
#        uses: gradle/actions/setup-gradle@v4
#      - name: run unit tests
#        shell: bash
#        run: ./gradlew unitTest
#      - name: upload the artifacts
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: upload kotlin test results
#          path: |
#            build/test-results
#            build/reports/tests
#
#  integration_test:
#    name: Integration Test
#    runs-on: ubuntu-latest
#    needs: gradle_build
#    strategy:
#      fail-fast: false
#      matrix:
#        shard: [ 1, 2, 3, 4, 5, 6 ]
#    env:
#      _JAVA_OPTIONS: "-Xmx3g"
#      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
#      POSTGRES_PORT: 5432
#      SPRING_DATA_REDIS_PORT: 6379
#    services:
#      redis:
#        image: "bitnami/redis:7.2.5"
#        ports:
#          - 6379:6379
#        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=5
#        env:
#          ALLOW_EMPTY_PASSWORD: yes
#      postgres:
#        image: "postgis/postgis:14-3.5"
#
#        env:
#          POSTGRES_USER: api_user
#          POSTGRES_PASSWORD: api_user_password
#          POSTGRES_DB: unused
#
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#        ports:
#          # Maps tcp port 5432 on service container to the host
#          - 5432:5432
#      localstack:
#        image: localstack/localstack:3.4.0
#        ports:
#          - 4566:4566
#          - 4571:4571
#        env:
#          ES_PORT_EXTERNAL: 4571
#          DOCKER_HOST: 'unix:///var/run/docker.sock'
#          AWS_EXECUTION_ENV: True
#          PERSISTENCE: 1
#          SERVICES: sns,sqs
#          DEFAULT_REGION: eu-west-2
#          DATA_DIR: /tmp/localstack/data
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: 21
#      - name: Set up Gradle
#        uses: gradle/actions/setup-gradle@v4
#
#      - name: Determine tests splitting
#        uses: chaosaffe/split-tests@v1
#        id: split-tests
#        with:
#          glob: src/test/kotlin/**/integration/**/*Test.kt
#          split-index: ${{ strategy.job-index }}
#          split-total: ${{ strategy.job-total }}
#
#      - name: Run integration test
#        run: |
#          # Format the arguments to "./gradlew integrationTest"
#          SPECS_LIST=$(echo  ${{ steps.split-tests.outputs.test-suite }} | sed 's/src\/test\/kotlin\///g;s/\//./g;s/\.kt / /g' | awk '{for (i=1; i<=NF; i++) print "--tests",$i}')
#          echo "Prepared arguments for Gradle: $SPECS_LIST"
#          ./gradlew integrationTest $SPECS_LIST
#
#      - name: upload the artifacts
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: integration-test-results-${{ matrix.shard }}-of-${{ strategy.job-total }}
#          path: |
#            build/test-results
#            build/reports/tests
#
#
